<?xml version="1.0"?>
<project name="rm-parent" basedir=".">

   <!-- The properties 'app.war.artifactId' and 'app.tomcat' are defined in the modules -->

   <property file="build.local.properties" />
   <property file="build.properties" />

   <property environment="env" />

   <target name="cleanTarget">
      <delete dir="${ant.build.directory}" failonerror="true" />
   </target>

   <target name="install">
      <exec executable="${mvn.exec}" failonerror="true">
         <arg value="install" />
         <arg value="-DskipTests" />
      </exec>
   </target>

   <target name="fetchWarFile">
      <exec executable="${mvn.exec}" failonerror="true">
         <arg value="dependency:get" />
         <arg value="-DgroupId=${app.war.groupId}" />
         <arg value="-DartifactId=${app.war.artifactId}" />
         <arg value="-Dversion=${app.war.version}" />
         <arg value="-Dpackaging=${app.war.packaging}" />
         <arg value="-Ddest=${ant.build.directory}/${app.package}" />
      </exec>
   </target>

   <target name="deleteWarFile">
      <delete file="${app.package.path}" failonerror="true" />
   </target>

   <target name="deleteExplodedWar">
      <delete dir="${app.folder}" failonerror="true" />
   </target>

   <target name="alfresco:amp" depends="cleanTarget, install">
      <exec executable="${mvn.exec}" failonerror="true">
         <arg value="alfresco:amp" />
      </exec>
   </target>

   <target name="alfresco:install" depends="deleteWarFile, deleteExplodedWar, alfresco:amp, fetchWarFile">
      <exec executable="${mvn.exec}" failonerror="true">
         <arg value="alfresco:install" />
      </exec>
   </target>

   <target name="copyWarFileToTomcat">
      <copy file="${ant.build.directory}/${app.package}" todir="${app.tomcat.webapps}" failonerror="true" />
   </target>

   <target name="buildAndDeploy" depends="alfresco:install, copyWarFileToTomcat" description=""/>

   <target name="getSvnRevision">
      <mkdir dir="${ant.build.directory}"/>
      <property name="svnInfoFile" value="${ant.build.directory}/svninfo.properties" />
      <exec executable="svn" output="${svnInfoFile}" failonerror="true">
         <arg value="info" />
      </exec>
      <property file="${svnInfoFile}"/>
   </target>

   <target name="assembleLocalisationPackage" depends="getSvnRevision" description="">
      <property name="i18n" value="${ant.build.directory}/i18n" />
      <delete dir="${i18n}" failonerror="true" />
      <copy todir="${i18n}/${ant.project.name}/${ant.config.directory}" failonerror="true">
         <fileset dir="${ant.config.directory}">
            <include name="**/*.properties" />
            <exclude name="**/*_*.properties" />
            <exclude name="**/rm-method-security.properties" />
            <exclude name="**/alfresco-global.properties" />
            <exclude name="**/log4j.properties" />
            <exclude name="**/module.properties" />
            <exclude name="**/file-mapping.properties" />
         </fileset>
      </copy>
      <zip destfile="${i18n}/${ant.project.name}-r${Revision}.zip" basedir="${i18n}" />
   </target>

   <target name="assembleIconPackage" description="">
      <delete dir="${ant.build.directory}/icons" failonerror="true" />
      <copy todir="${ant.build.directory}/icons/${ant.project.name}" failonerror="true">
         <fileset dir=".">
            <include name="**/*.png"/>
            <exclude name="**/${ant.build.directory}/**"/>
         </fileset>
      </copy>
   </target>

   <target name="deployExploded" depends="cleanTarget, install" description="">
      <fail message="Exploded webapp directory '${app.war.artifactId}' does not exist.">
         <condition>
            <not>
               <available file="${app.folder}" type="dir"/>
            </not>
         </condition>
      </fail>
      <copy todir="${app.folder}/WEB-INF/lib" failonerror="true">
         <fileset dir="${ant.build.directory}">
            <include name="*.jar" />
         </fileset>
      </copy>
      <copy todir="${app.folder}/WEB-INF/classes" failonerror="true">
         <fileset dir="${ant.config.directory}">
            <exclude name="**/module.properties" />
            <exclude name="**/file-mapping.properties" />
         </fileset>
      </copy>
      <copy todir="${app.folder}" failonerror="false">
         <fileset dir="${ant.source.web.directory}" />
      </copy>
   </target>
</project>