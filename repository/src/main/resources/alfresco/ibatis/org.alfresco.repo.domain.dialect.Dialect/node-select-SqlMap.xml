<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="alfresco.node.select">

    <resultMap id="result_NodeRef" type="Node">
        <result property="id" column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result property="store.protocol" column="protocol" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="store.identifier" column="identifier" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="uuid" column="uuid" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </resultMap>

    <select id="select_Deleted_NodesByTxnCommitTime" parameterType="TransactionQuery" fetchSize="100000" resultType="java.lang.Long">
        select
            node.id
        from
            alf_node node
                join alf_transaction txn on (node.transaction_id = txn.id)
        where
            node.type_qname_id = #{typeQNameId}
        <![CDATA[and commit_time_ms < #{maxCommitTime}]]>
    </select>

    <select id="select_Txns_UnusedByTxnCommitTime" parameterType="TransactionQuery" fetchSize="100000" resultType="java.lang.Long">
        select
            id
        from alf_transaction
        where not exists
            (
           select 1
           from
               alf_node node
           where
               node.transaction_id = alf_transaction.id
            )
      <![CDATA[and commit_time_ms <= #{maxCommitTime}]]>
    </select>

    <select id="select_NodesWithAspectIds_Limited" parameterType="Ids" resultMap="result_NodeRef" >
        select
        node.id             as id,
        store.protocol      as protocol,
        store.identifier    as identifier,
        node.uuid           as uuid
        from
        alf_node_aspects na
        join alf_node node on (na.node_id = node.id)
        left join alf_store store on (store.id = node.store_id)
        where
        <![CDATA[na.node_id >= #{idOne}]]>
        <if test="idTwo != null"><![CDATA[and na.node_id < #{idTwo}]]></if>
        and na.qname_id in
        <foreach item="item" index="i" collection="ids" open="(" separator="," close=")">#{item}</foreach>
        <if test="ordered == true">order by node.id ASC</if>
        <if test="maxResults != null"><![CDATA[limit #{maxResults}]]></if>
    </select>

</mapper>
