import:
  - source: travis/travis-env-vars.yml
  - source: travis/travis_integration_test_MySQL.yml

os: linux
dist: xenial
language: java
jdk:
  - openjdk8

branches:
  only:
    - /release\/V2.7.*/
    - /feature-2.7\/.*/
    - /merge-2.7\/.*/
    - /hotfix-2.7\/.*/

cache:
  directories:
    - $HOME/.m2

# the cache can grow constantly
before_cache:
  - rm -rf $HOME/.m2/repository/org/alfresco/alfresco-rm*


before_install:
  - "cp .travis.settings.xml $HOME/.m2/settings.xml"
install: skip

services:
  - docker

stages:
  - name: Build AGS
  - name: Tests
    if: commit_message !~ /\[skip tests\]/
  - name: Security Scans
  - name: Release
    if: fork = false AND (branch = master OR branch =~ /release\/.*/) AND type != pull_request AND commit_message =~ /\[(community|enterprise) release .*\]/
  - name: Publish
    if: fork = false AND (branch = master OR branch =~ /release\/.*/) AND type != pull_request AND commit_message =~ /\[publish\]/

jobs:
  include:
    - name: "Build AGS Community"
      stage: Build AGS
      before_script: source scripts/setUpMavenPhase.sh
      script:
        - travis_retry travis_wait 80 mvn -B -q clean ${MAVEN_PHASE} -Dskip.integrationtests=false -Dcommunity -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

    - name: "Build AGS Enterprise"
      stage: Build AGS
      before_script: source scripts/setUpMavenPhase.sh
      install:
        - travis_retry travis_wait 60 mvn -B -q clean install -DskipTests -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -f rm-community/pom.xml -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      script:
        - travis_retry travis_wait 80 mvn -B -q clean ${MAVEN_PHASE} -Dskip.integrationtests=false -f rm-enterprise/pom.xml -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

    - name: "Build AGS Benchmark"
      stage: Build AGS
      before_script: source scripts/setUpMavenPhase.sh
      install:
        - travis_retry travis_wait 60 mvn -B -q clean install -DskipTests -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      script:
        - travis_retry travis_wait 35 mvn -B -q clean ${MAVEN_PHASE} -Dskip.integrationtests=false -f rm-benchmark/pom.xml -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

    - name: "Community Rest API Tests"
      stage: Tests
      before_install:
        - travis_retry travis_wait 90 mvn -B install -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -DskipTests -q
        - travis_wait 5 bash scripts/downloadInstaller.sh $S3_COMMUNITY_INSTALLER_PATH $AUTOMATION_COMMUNITY_PATH/target
      install: travis_wait 20 mvn -B install -PinstallAlfresco,apply-rm-community -q -f $AUTOMATION_COMMUNITY_PATH/pom.xml
      script:
        - travis_wait 60 mvn -B install -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_COMMUNITY_PATH/pom.xml -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

    - name: "Enterprise Rest API Tests"
      stage: Tests
      before_install:
        - travis_retry travis_wait 90 mvn -B install -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -DskipTests -q
        - travis_wait 5 bash scripts/downloadInstaller.sh $S3_ENTERPRISE_INSTALLER_PATH $AUTOMATION_ENTERPRISE_PATH/target
      install: travis_wait 20 mvn -B install -PinstallAlfresco,apply-rm-enterprise -q -f $AUTOMATION_ENTERPRISE_PATH/pom.xml
      script:
        - travis_wait 60 mvn -B install -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_ENTERPRISE_PATH/pom.xml -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

    - &community_shared_UI_configuration
      name: "Community Smoke UI Tests for Records"
      stage: Tests
      addons:
        firefox: "43.0.1"
        artifacts:
          paths:
            - ./rm-automation/rm-automation-ui/target/surefire-reports
            - ./rm-automation/rm-automation-ui/target/reports
            - ./rm-automation/rm-automation-ui/target/screenshots
          target_paths: $TRAVIS_BUILD_NUMBER
      before_install:
        - travis_retry travis_wait 90 mvn -B install -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -DskipTests -q
        - travis_wait 5 bash scripts/downloadInstaller.sh $S3_COMMUNITY_INSTALLER_PATH $AUTOMATION_UI_PATH/target
      install: travis_wait 20 mvn -B install -PinstallAlfresco,apply-rm-community -q -f $AUTOMATION_UI_PATH/pom.xml
      script:
        - travis_wait 90 xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B test -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_UI_PATH/pom.xml -DsuiteXmlFile=communitySmokeRecords.xml -Dshare.url=${SHARE_URL} -Dalfresco.url=${ALFRESCO_URL} ${WEBDRIVER_ARGUMENTS}

    - <<: *community_shared_UI_configuration
      name: "Community Smoke UI Tests for actions in RM site"
      script:
        - travis_wait 90 xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B install -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_UI_PATH/pom.xml -DsuiteXmlFile=communitySmokeRMSite.xml -Dshare.url=${SHARE_URL} -Dalfresco.url=${ALFRESCO_URL} ${WEBDRIVER_ARGUMENTS}

    - <<: *community_shared_UI_configuration
      name: "Community Level 2 UI Tests"
      script:
        - travis_wait 90 xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B install -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_UI_PATH/pom.xml -DsuiteXmlFile=communityLevel2Tests.xml -Dshare.url=${SHARE_URL} -Dalfresco.url=${ALFRESCO_URL} ${WEBDRIVER_ARGUMENTS}

    - &enterprise_shared_UI_configuration
      name: "Enterprise Level 2 UI Tests"
      stage: Tests
      addons:
        firefox: "43.0.1"
        artifacts:
          paths:
            - ./rm-automation/rm-automation-ui/target/surefire-reports
            - ./rm-automation/rm-automation-ui/target/reports
            - ./rm-automation/rm-automation-ui/target/screenshots
          target_paths: $TRAVIS_BUILD_NUMBER
      before_install:
        - travis_retry travis_wait 90 mvn -B install -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -DskipTests -q
        - travis_wait 5 bash scripts/downloadInstaller.sh $S3_ENTERPRISE_INSTALLER_PATH $AUTOMATION_UI_PATH/target
      install: travis_wait 20 mvn -B install -PinstallAlfresco,apply-rm-enterprise -q -f $AUTOMATION_UI_PATH/pom.xml
      script:
        - travis_wait 90 xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B test -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_UI_PATH/pom.xml -DsuiteXmlFile=enterpriseLevel2Tests.xml -Dshare.url=${SHARE_URL} -Dalfresco.url=${ALFRESCO_URL} ${WEBDRIVER_ARGUMENTS}

    - <<: *enterprise_shared_UI_configuration
      name: "Enterprise Classification Level 2 UI Tests"
      script:
        - travis_wait 90 xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B test -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_UI_PATH/pom.xml -DsuiteXmlFile=enterpriseLevel2ClassificationTests.xml -Dshare.url=${SHARE_URL} -Dalfresco.url=${ALFRESCO_URL} ${WEBDRIVER_ARGUMENTS}

    - <<: *enterprise_shared_UI_configuration
      name: "Enterprise Content Classification UI Tests"
      script:
        - travis_wait 120 xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B test -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_UI_PATH/pom.xml -DsuiteXmlFile=enterpriseContentClassificationTests.xml -Dshare.url=${SHARE_URL} -Dalfresco.url=${ALFRESCO_URL} ${WEBDRIVER_ARGUMENTS}

    - <<: *enterprise_shared_UI_configuration
      name: "Enterprise Folders Classification UI Tests"
      script:
        - travis_wait 90 xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B test -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_UI_PATH/pom.xml -DsuiteXmlFile=enterpriseFoldersClassificationTests.xml -Dshare.url=${SHARE_URL} -Dalfresco.url=${ALFRESCO_URL} ${WEBDRIVER_ARGUMENTS}

    - <<: *enterprise_shared_UI_configuration
      name: "Enterprise Guides UI Tests"
      script:
        - travis_wait 90 xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B test -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_UI_PATH/pom.xml -DsuiteXmlFile=enterpriseGuidesTests.xml -Dshare.url=${SHARE_URL} -Dalfresco.url=${ALFRESCO_URL} ${WEBDRIVER_ARGUMENTS}

    - <<: *enterprise_shared_UI_configuration
      name: "Enterprise Security Marks UI Tests"
      script:
        - travis_wait 90 xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B test -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_UI_PATH/pom.xml -DsuiteXmlFile=enterpriseSecurityMarksTests.xml -Dshare.url=${SHARE_URL} -Dalfresco.url=${ALFRESCO_URL} ${WEBDRIVER_ARGUMENTS}

    - <<: *enterprise_shared_UI_configuration
      name: "Enterprise Console and Configuration UI Tests"
      script:
        - travis_wait 90 xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B test -Prun-alfresco -Dskip.automationtests=false -f $AUTOMATION_UI_PATH/pom.xml -DsuiteXmlFile=enterpriseConsoleAndConfigurationTests.xml -Dshare.url=${SHARE_URL} -Dalfresco.url=${ALFRESCO_URL} ${WEBDRIVER_ARGUMENTS}

    - name: "Source Clear Scan (SCA)"
      stage: Security Scans
      script:
       - echo "Source Clear Scan (SCA)"
    - name: "Static Analysis (SAST)"
      stage: Security Scans
      script:
       - echo "Static Analysis (SAST)"

    - name: "Community Release and Publish to S3 Staging Bucket"
      stage: Release
      if: commit_message =~ /\[community release .*\]/
      before_script:
        - source scripts/set-release-variables.sh
      script:
        - bash scripts/release.sh "community"
      before_deploy:
        - bash scripts/zip-artifacts-staging.sh "community"
      deploy:
        - provider: s3
          access_key_id: ${STAGING_AWS_ACCESS_KEY}
          secret_access_key: ${STAGING_AWS_SECRET_KEY}
          region: "eu-west-1"
          bucket: "alfresco-artefacts-staging"
          upload_dir: "community/RM/${RELEASE_VERSION}"
          skip_cleanup: true
          acl: private
          local_dir: artifacts_dir
          on:
            all_branches: true
      after_deploy:
        - echo "Finished release and deployed to https://s3.console.aws.amazon.com/s3/buckets/alfresco-artefacts-staging/community/RM/${RELEASE_VERSION}"

    - name: "Enterprise Release and Publish to S3 Staging Bucket"
      stage: Release
      if: commit_message =~ /\[enterprise release .*\]/
      before_script:
        - source scripts/set-release-variables.sh
      script:
        - bash scripts/release.sh "enterprise"
      before_deploy:
        - bash scripts/zip-artifacts-staging.sh "enterprise"
      deploy:
        - provider: s3
          access_key_id: ${STAGING_AWS_ACCESS_KEY}
          secret_access_key: ${STAGING_AWS_SECRET_KEY}
          region: "eu-west-1"
          bucket: "alfresco-artefacts-staging"
          upload_dir: "enterprise/RM/${RELEASE_VERSION}"
          skip_cleanup: true
          acl: private
          local_dir: artifacts_dir
          on:
            all_branches: true
      after_deploy:
        - echo "Finished release and deployed to https://s3.console.aws.amazon.com/s3/buckets/alfresco-artefacts-staging/enterprise/RM/${RELEASE_VERSION}"

    - name: "Community Publish to S3 Release Bucket"
      stage: Publish
      if: commit_message =~ /\[community release .*\]/ AND commit_message =~ /\[publish\]/
      before_script: source scripts/set-release-variables.sh
      script: skip
      before_deploy: bash scripts/zip-artifacts-release.sh "community"
      deploy:
        - provider: s3
          access_key_id: ${RELEASE_AWS_ACCESS_KEY}
          secret_access_key: ${RELEASE_AWS_SECRET_KEY}
          region: "eu-west-1"
          bucket: "eu.dl.alfresco.com"
          upload_dir: "release/community/RM/${RELEASE_VERSION}"
          skip_cleanup: true
          acl: private
          local_dir: artifacts_dir
          on:
            all_branches: true
      after_deploy:
        - echo "Finished release and deployed to https://s3.console.aws.amazon.com/s3/buckets/eu.dl.alfresco.com/release/community/RM/${RELEASE_VERSION}"

    - name: "Enterprise Publish to S3 Release Bucket"
      stage: Publish
      if: commit_message =~ /\[enterprise release .*\]/ AND commit_message =~ /\[publish\]/
      before_script: source scripts/set-release-variables.sh
      script: skip
      before_deploy: bash scripts/zip-artifacts-release.sh "enterprise"
      deploy:
        - provider: s3
          access_key_id: ${RELEASE_AWS_ACCESS_KEY}
          secret_access_key: ${RELEASE_AWS_SECRET_KEY}
          region: "eu-west-1"
          bucket: "eu.dl.alfresco.com"
          upload_dir: "release/enterprise/RM/${RELEASE_VERSION}"
          skip_cleanup: true
          acl: private
          local_dir: artifacts_dir
          on:
            all_branches: true
      after_deploy:
        - echo "Finished release and deployed to https://s3.console.aws.amazon.com/s3/buckets/eu.dl.alfresco.com/release/enterprise/RM/${RELEASE_VERSION}"