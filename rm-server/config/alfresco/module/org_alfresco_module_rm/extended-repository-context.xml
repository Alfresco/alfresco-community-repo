<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>

<beans>

   <bean id="ExtendedPermissionService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.repo.security.permissions.impl.ExtendedPermissionService</value>
        </property>
        <property name="target">
            <ref bean="permissionServiceImpl"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref bean="PermissionService_transaction"/>
                <idref bean="AuditMethodInterceptor"/>
                <idref bean="exceptionTranslator"/>
                <idref bean="ExtendedPermissionService_security"/>
            </list>
        </property>
    </bean>
    
    <bean id="ExtendedPermissionService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager"><ref bean="authenticationManager"/></property>
        <property name="accessDecisionManager"><ref bean="accessDecisionManager"/></property>
        <property name="afterInvocationManager"><ref bean="afterInvocationManager"/></property>
        <property name="objectDefinitionSource">
            <value>
                org.alfresco.service.cmr.security.PermissionService.getOwnerAuthority=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.getAllAuthorities=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.getAllPermission=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.getPermissions=ACL_NODE.0.sys:base.ReadPermissions
                org.alfresco.service.cmr.security.PermissionService.getAllSetPermissions=ACL_NODE.0.sys:base.ReadPermissions
                org.alfresco.service.cmr.security.PermissionService.getSettablePermissions=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.hasPermission=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.getReaders=ACL_METHOD.ROLE_ADMINISTRATOR
                org.alfresco.repo.security.permissions.impl.ExtendedPermissionService.getWriters=ACL_METHOD.ROLE_ADMINISTRATOR
                org.alfresco.service.cmr.security.PermissionService.deletePermissions=ACL_NODE.0.sys:base.ChangePermissions
                org.alfresco.service.cmr.security.PermissionService.deletePermission=ACL_NODE.0.sys:base.ChangePermissions
                org.alfresco.service.cmr.security.PermissionService.setPermission=ACL_NODE.0.sys:base.ChangePermissions
                org.alfresco.service.cmr.security.PermissionService.setInheritParentPermissions=ACL_NODE.0.sys:base.ChangePermissions
                org.alfresco.service.cmr.security.PermissionService.getInheritParentPermissions=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.clearPermission=ACL_NODE.0.sys:base.ChangePermissions
                org.alfresco.service.cmr.security.PermissionService.*=ACL_DENY
            </value>
        </property>
    </bean>
    
    <bean name="writersSharedCache" class="org.alfresco.repo.cache.DefaultSimpleCache">
      <property name="maxItems" value="${cache.writersSharedCache.maxItems}"/>
    </bean>
    
    <bean name="writersCache" class="org.alfresco.repo.cache.TransactionalCache">
      <property name="sharedCache">
         <ref bean="writersSharedCache" />
      </property>
      <property name="name">
         <value>org.alfresco.writersTransactionalCache</value>
      </property>
      <property name="maxCacheSize" value="10000" />
      <property name="mutable" value="true" />
      <property name="disableSharedCache" value="${system.cache.disableMutableSharedCaches}" />
   </bean>

   <bean id="permissionServiceImpl" class="org.alfresco.repo.security.permissions.impl.RMPermissionServiceImpl" init-method="init">
      <property name="writersCache" ref="writersCache"/>
      <property name="nodeService">
         <ref bean="mtAwareNodeService" />
      </property>
      <property name="tenantService">
         <ref bean="tenantService"/>
      </property>
      <property name="dictionaryService">
         <ref bean="dictionaryService" />
      </property>
      <property name="permissionsDaoComponent">
         <ref bean="permissionsDaoComponent" />
      </property>
      <property name="modelDAO">
         <ref bean="permissionsModelDAO" />
      </property>
      <property name="authorityService">
         <ref bean="authorityService" />
      </property>
      <property name="accessCache">
         <ref bean="permissionsAccessCache" />
      </property>
      <property name="readersCache">
         <ref bean="readersCache" />
      </property>
      <property name="readersDeniedCache">
         <ref bean="readersDeniedCache" />
      </property>
      <property name="policyComponent">
         <ref bean="policyComponent" />
      </property>
      <property name="aclDAO">
         <ref bean="aclDAO" />
      </property>
      <property name="ownableService">
         <ref bean="ownableService" />
      </property>
      <property name="anyDenyDenies">
         <value>${security.anyDenyDenies}</value>
      </property>
      <property name="dynamicAuthorities">
         <list>
            <ref bean="ownerDynamicAuthority" />
            <ref bean="lockOwnerDynamicAuthority" />
            <ref bean="extendedWriterDynamicAuthority" />
            <ref bean="extendedReaderDynamicAuthority" />
         </list>
      </property>
   </bean>

   <bean id="extendedReaderDynamicAuthority" class="org.alfresco.module.org_alfresco_module_rm.security.ExtendedReaderDynamicAuthority" />
   
   <bean id="extendedWriterDynamicAuthority" class="org.alfresco.module.org_alfresco_module_rm.security.ExtendedWriterDynamicAuthority" />
   
   <!-- Action Service -->
   <bean id="actionService" class="org.alfresco.repo.action.ExtendedActionServiceImpl" init-method="init">
   
   		<property name="recordsManagementService" ref="RecordsManagementService" />
   
        <property name="policyComponent">
            <ref bean="policyComponent" />
        </property>         
        <property name="nodeService">
            <ref bean="NodeService" />
        </property>         
        <property name="searchService">
            <ref bean="ADMSearchService" />
        </property>         
        <property name="authenticationContext">
            <ref bean="authenticationContext" />
        </property>        
        <property name="actionTrackingService">
            <ref bean="actionTrackingService" />
        </property>        
        <property name="dictionaryService">
            <ref bean="DictionaryService" />
        </property>
        <property name="monitor">
            <ref bean="actionServiceMonitor"/>
        </property>
        
        <property name="asynchronousActionExecutionQueues">
            <map>
                <!--  This is the default async queue -->
               <entry key="">
                      <ref bean="defaultAsynchronousActionExecutionQueue"/>
               </entry>
               <entry key="deployment">
                      <ref bean="deploymentAsynchronousActionExecutionQueue"/>
               </entry>
            </map>   
        </property>
    </bean>
    
    <bean id="parameterProcessorComponent" class="org.alfresco.repo.action.parameter.ParameterProcessorComponent"/>
    
    <bean id="baseParamenterProcessor" abstract="true" init-method="init">
    	<property name="parameterProcessorComponent" ref="parameterProcessorComponent"/>
    </bean>
    
    <bean id="nodeParameterProcessor" parent="baseParamenterProcessor" class="org.alfresco.repo.action.parameter.NodeParameterProcessor" >
    	<property name="name" value="node" />
    	<property name="nodeService" ref="NodeService" />
    	<property name="dictionaryService" ref="DictionaryService" />
    	<property name="namespaceService" ref="NamespaceService" />
    </bean>
    
    <bean id="dateParameterProcessor" parent="baseParamenterProcessor" class="org.alfresco.repo.action.parameter.DateParameterProcessor">
    	<property name="name" value="date" />
    </bean>
    
    <bean id="messageParameterProcessor" parent="baseParamenterProcessor" class="org.alfresco.repo.action.parameter.MessageParameterProcessor">
    	<property name="name" value="message" />
    </bean>
    
    <!--  Rule Service -->
    
    <bean id="ruleService" class="org.alfresco.repo.rule.ExtendedRuleServiceImpl" init-method="init">
        <property name="nodeService" ref="NodeService"/>
        <property name="runtimeNodeService" ref="nodeService"/>
        <property name="copyService" ref="copyService"/>
        <property name="actionService" ref="ActionService"/>
        <property name="runtimeActionService" ref="actionService"/>
        <property name="dictionaryService" ref="dictionaryService"/>
        <property name="policyComponent" ref="policyComponent"/>
        <property name="permissionService" ref="permissionService"/>
	    <property name="nodeRulesCache" ref="nodeRulesCache"/>
        <property name="rulesDisabled">
            <value>false</value>
        </property>
    
    	<!--  Since RM 2.1 -->
    	<property name="filePlanAuthenticationService" ref="FilePlanAuthenticationService"/>
    	<property name="recordsManagementService" ref="RecordsManagementService" />
    	<property name="runAsRmAdmin">
    		<value>${rm.rule.runasrmadmin}</value>
    	</property>    
        
   </bean>
   
    <bean id="RuleService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager"><ref bean="authenticationManager"/></property>
        <property name="accessDecisionManager"><ref bean="accessDecisionManager"/></property>
        <property name="afterInvocationManager"><ref bean="afterInvocationManager"/></property>
        <property name="objectDefinitionSource">
            <value>
                org.alfresco.service.cmr.rule.RuleService.getRuleTypes=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.getRuleType=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.enableRules=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.disableRules=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.isEnabled=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.rulesEnabled=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.disableRule=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.enableRule=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.disableRuleType=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.enableRuleType=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.isRuleTypeEnabled=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.hasRules=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.getRules=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.countRules=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.getRule=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.saveRule=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.setRulePosition=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.removeRule=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.removeAllRules=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.getOwningNodeRef=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.isLinkedToRuleNode=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.getLinkedToRuleNode=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.getLinkedFromRuleNodes=ACL_ALLOW
				org.alfresco.service.cmr.rule.RuleService.*=ACL_DENY
            </value>
        </property>
    </bean>    
	
</beans>    