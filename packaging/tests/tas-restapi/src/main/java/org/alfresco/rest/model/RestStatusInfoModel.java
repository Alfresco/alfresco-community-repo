/*-
 * #%L
 * alfresco-tas-restapi
 * %%
 * Copyright (C) 2005 - 2022 Alfresco Software Limited
 * %%
 * This file is part of the Alfresco software. 
 * If the software was purchased under a paid Alfresco license, the terms of 
 * the paid license agreement will prevail.  Otherwise, the software is 
 * provided under the following open source license terms:
 * 
 * Alfresco is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * Alfresco is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.
 * #L%
 */
package org.alfresco.rest.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import org.alfresco.rest.core.IRestModel;
import org.alfresco.utility.model.TestModel;

/**
 * Generated by 'tsalvado' on '2021-08-18 21:15' from 'Alfresco Content Services REST API' swagger file 
 * Generated from 'Alfresco Content Services REST API' swagger file
 * Base Path {@linkplain /alfresco/api}
 */
public class RestStatusInfoModel extends TestModel implements IRestModel<RestStatusInfoModel>
{
    @JsonProperty(value = "entry")
    RestStatusInfoModel model;

    @Override
    public RestStatusInfoModel onModel()
    {
        return model;
    }


    @JsonProperty(required = true)    
    private boolean isReadOnly;	    

    @JsonProperty(required = true)    
    private boolean isAuditEnabled;	    

    @JsonProperty(required = true)    
    private boolean isQuickShareEnabled;	    

    @JsonProperty(required = true)    
    private boolean isThumbnailGenerationEnabled;	    

    @JsonProperty(required = true)    
    private boolean isDirectAccessUrlEnabled;	    

    public boolean getIsReadOnly()
    {
        return this.isReadOnly;
    }

    public void setIsReadOnly(boolean isReadOnly)
    {
        this.isReadOnly = isReadOnly;
    }				

    public boolean getIsAuditEnabled()
    {
        return this.isAuditEnabled;
    }

    public void setIsAuditEnabled(boolean isAuditEnabled)
    {
        this.isAuditEnabled = isAuditEnabled;
    }				

    public boolean getIsQuickShareEnabled()
    {
        return this.isQuickShareEnabled;
    }

    public void setIsQuickShareEnabled(boolean isQuickShareEnabled)
    {
        this.isQuickShareEnabled = isQuickShareEnabled;
    }				

    public boolean getIsThumbnailGenerationEnabled()
    {
        return this.isThumbnailGenerationEnabled;
    }

    public void setIsThumbnailGenerationEnabled(boolean isThumbnailGenerationEnabled)
    {
        this.isThumbnailGenerationEnabled = isThumbnailGenerationEnabled;
    }				

    public boolean getIsDirectAccessUrlEnabled()
    {
        return this.isDirectAccessUrlEnabled;
    }

    public void setIsDirectAccessUrlEnabled(boolean isDirectAccessUrlEnabled)
    {
        this.isDirectAccessUrlEnabled = isDirectAccessUrlEnabled;
    }				
}
 
