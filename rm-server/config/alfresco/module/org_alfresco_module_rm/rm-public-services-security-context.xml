<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>

<!-- ========================== -->
<!-- Enforcement of permissions -->
<!-- ========================== -->

<!--                                                                                     -->
<!-- This file defines the beans that intercept method calls to the repository services  -->
<!-- and enforce security based on the currently authenticated user.                     -->
<!--                                                                                     -->

<beans>

    <!-- ===================== -->
    <!-- Permissions Model DAO -->
    <!-- ===================== -->

    <bean id='permissionsModelDAO' class="org.alfresco.repo.security.permissions.impl.model.PermissionModel" init-method="init">
        <property name="model">
            <value>alfresco/model/permissionDefinitions.xml</value>
        </property>
        <property name="dtdSchema">
            <value>alfresco/model/permissionSchema.dtd</value>
        </property>
        <property name="nodeService">
            <ref bean="nodeService"/>
        </property>
        <property name="dictionaryService">
            <ref bean="dictionaryService"/>
        </property>
    </bean>

    <!-- =========================== -->
    <!-- Permissions Model Bootstrap -->
    <!-- =========================== -->

    <bean id="permissionModelBootstrap" class="org.alfresco.repo.security.permissions.impl.model.PermissionModelBootstrap" abstract="true" init-method="init">
        <property name="permissionModel" ref="permissionsModelDAO"/>
    </bean>

    <!-- =========================== -->
    <!-- Helper bean -->
    <!-- =========================== -->

    <bean id="RMSecurityCommon" abstract="true">
    	<property name="nodeService" ref="nodeService"/>
    	<property name="permissionService" ref="permissionService"/>
    	<property name="caveatConfigComponent" ref="caveatConfigComponent"/>
    </bean>

    <!-- ====== -->
    <!-- Voters -->
    <!-- ====== -->

    <!-- A voter to allow access based on node access control.                           -->
    <!-- These start ACL_NODE or ACL_PARENT and are followed by .methodArgumentPosition  -->
    <!-- then object type (prefix:localname) . permission                                -->
    <!--                                                                                 -->
    <!-- All permissions starting ACL_NODE and ACL_PARENT must be present for access to  -->
    <!-- be granted.                                                                     -->
    <!--                                                                                 -->
    <!-- Note: ff the context evaluates to null (e.g. doing an exists test on a node     -->
    <!-- that does not exist) then access will be allowed.                               -->

    <bean id="aclEntryVoter" class="org.alfresco.repo.security.permissions.impl.acegi.RMACLEntryVoter" abstract="false" singleton="true" lazy-init="default" autowire="default" dependency-check="default">
        <property name="permissionService">
            <ref bean="permissionService"></ref>
        </property>
        <property name="namespacePrefixResolver">
            <ref bean="namespaceService"></ref>
        </property>
        <property name="nodeService">
            <ref bean="nodeService"></ref>
        </property>
        <property name="ownableService">
            <ref bean="ownableService"></ref>
        </property>
        <property name="authenticationService">
            <ref bean="authenticationService"/>
        </property>
        <property name="authorityService">
            <ref bean="authorityService"/>
        </property>
        <property name="abstainFor">
            <set>
                <value>{http://www.alfresco.org/model/recordsmanagement/1.0}filePlanComponent</value>
            </set>
        </property>
    </bean>

    <bean id="rmEntryVoter"
          class="org.alfresco.module.org_alfresco_module_rm.capability.RMEntryVoter"
          lazy-init="false"
          parent="RMSecurityCommon"
          depends-on="CapabilityService">
        <property name="namespacePrefixResolver" ref="namespaceService"/>
        <property name="capabilityService" ref="capabilityService"/>

    </bean>

    <!-- ======================= -->
    <!-- Access decision manager -->
    <!-- ======================= -->

    <!-- The access decision manager asks voters in order if they should allow access    -->
    <!-- Role and group access do not require ACL based access                           -->

    <bean id="accessDecisionManager" class="org.alfresco.repo.security.permissions.impl.acegi.AffirmativeBasedAccessDecisionManger">
        <property name="allowIfAllAbstainDecisions">
            <value>false</value>
        </property>
        <property name="decisionVoters">
            <list>
                <ref bean="roleVoter"/>
                <ref bean="groupVoter"/>
                <ref bean="aclEntryVoter"/>
                <ref bean="rmEntryVoter"/>
            </list>
        </property>
    </bean>

    <!-- ======================================== -->
    <!-- Post method call application of security -->
    <!-- ======================================== -->

    <bean id="afterAcl" class="org.alfresco.repo.security.permissions.impl.acegi.ACLEntryAfterInvocationProvider" abstract="false" singleton="true" lazy-init="default" autowire="default" dependency-check="default">
        <property name="permissionService">
            <ref bean="permissionServiceImpl"></ref>
        </property>
        <property name="namespacePrefixResolver">
            <ref bean="namespaceService"></ref>
        </property>
        <property name="nodeService">
            <ref bean="nodeService"></ref>
        </property>
        <property name="authenticationService">
            <ref bean="authenticationService"/>
        </property>
        <property name="maxPermissionCheckTimeMillis">
            <value>${system.acl.maxPermissionCheckTimeMillis}</value>
        </property>
        <property name="maxPermissionChecks">
            <value>${system.acl.maxPermissionChecks}</value>
        </property>
        <property name="unfilteredFor">
            <set>
                <value>{http://www.alfresco.org/model/recordsmanagement/1.0}filePlanComponent</value>
            </set>
        </property>
    </bean>

    <bean id="afterRm" class="org.alfresco.module.org_alfresco_module_rm.capability.RMAfterInvocationProvider" parent="RMSecurityCommon">
        <property name="maxPermissionCheckTimeMillis">
            <value>${system.acl.maxPermissionCheckTimeMillis}</value>
        </property>
        <property name="maxPermissionChecks">
            <value>${system.acl.maxPermissionChecks}</value>
        </property>
    </bean>

    <!-- Link up after method call security -->

    <bean id="afterInvocationManager" class="net.sf.acegisecurity.afterinvocation.AfterInvocationProviderManager">
        <property name="providers">
            <list>
                <ref bean="afterAcl"/>
                <ref bean="afterRm"/>
                <ref bean="afterAclMarking"/>
            </list>
        </property>
    </bean>

</beans>