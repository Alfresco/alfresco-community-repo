<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>

<beans>

	<!--  Helper beans -->

	<bean id="baseTransaction" abstract="true" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="baseSecurity" abstract="true" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
  	</bean>

  	<bean id="baseService" abstract="true">
  	   <property name="nodeService" ref="NodeService"/>
  	   <property name="dictionaryService" ref="DictionaryService"/>
  	</bean>

    <!-- Records Management Service Registry -->

    <bean id="RecordsManagementServiceRegistry" class="org.alfresco.module.org_alfresco_module_rm.RecordsManagementServiceRegistryImpl" />

    <!-- Disposition selection strategy -->
    <bean id="org_alfresco_module_rm_dispositionSelectionStrategy"
          class="org.alfresco.module.org_alfresco_module_rm.disposition.DispositionSelectionStrategy" >
        <property name="dispositionService" ref="dispositionService"/>
        <property name="filePlanAuthenticationService" ref="FilePlanAuthenticationService"/>
    </bean>

    <!-- Records Management Service -->

    <bean id="recordsManagementService" class="org.alfresco.module.org_alfresco_module_rm.RecordsManagementServiceImpl"
          depends-on="org_alfresco_module_rm_dictionaryBootstrap" init-method="init">
        <property name="recordsManagementServiceRegistry" ref="RecordsManagementServiceRegistry"/>
        <property name="nodeService" ref="nodeService"/>
        <property name="policyComponent" ref="policyComponent"/>
    </bean>

    <bean id="RecordsManagementService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.RecordsManagementService</value>
        </property>
        <property name="target">
            <ref bean="recordsManagementService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="RecordsManagementService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="RecordsManagementService_security"/>
            </list>
        </property>
    </bean>

    <bean id="RecordsManagementService_transaction" parent="baseTransaction"/>

    <bean id="RecordsManagementService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isFilePlanComponent=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getFilePlanComponentKind=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getFilePlanComponentKindFromType=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isRecordsManagementContainer=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isFilePlan=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isRecordCategory=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isRecordFolder=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isRecord=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isHold=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isTransfer=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isMetadataStub=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isFrozen=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.hasFrozenChildren=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isCutoff=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getNodeRefPath=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getFilePlan=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getFilePlans=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.createFilePlan=RM.WRITE.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getAllContained=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getContainedRecordCategories=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getContainedRecordFolders=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.createRecordCategory=RM.Write.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isRecordFolderDeclared=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isRecordFolderClosed=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.createRecordFolder=RM.Write.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getRecords=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getRecordFolders=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.getRecordMetaDataAspects=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.isRecordDeclared=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.RecordsManagementService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <!--  Vital Record Service -->

    <bean id="vitalRecordService" class="org.alfresco.module.org_alfresco_module_rm.vital.VitalRecordServiceImpl" init-method="init">
        <property name="recordsManagementService" ref="RecordsManagementService"/>
        <property name="recordsManagementActionService" ref="RecordsManagementActionService"/>
        <property name="nodeService" ref="NodeService"/>
        <property name="filePlanAuthenticationService" ref="FilePlanAuthenticationService" />
        <property name="policyComponent" ref="policyComponent"/>
        <property name="filePlanService" ref="FilePlanService" />
    </bean>

    <bean id="VitalRecordService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.vital.VitalRecordService</value>
        </property>
        <property name="target">
            <ref bean="vitalRecordService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="VitalRecordService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="VitalRecordService_security"/>
            </list>
        </property>
    </bean>

    <bean id="VitalRecordService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="VitalRecordService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.vital.VitalRecordService.*=RM_ALLOW
                ]]>
            </value>
        </property>
    </bean>

    <!--  Disposition Service -->
    <bean id="dispositionService" class="org.alfresco.module.org_alfresco_module_rm.disposition.DispositionServiceImpl" init-method="init">
        <property name="recordsManagementServiceRegistry" ref="RecordsManagementServiceRegistry"/>
        <property name="nodeService" ref="NodeService"/>
        <property name="dictionaryService" ref="DictionaryService"/>
        <property name="behaviourFilter" ref="policyBehaviourFilter" />
        <property name="policyComponent" ref="policyComponent" />
        <property name="filePlanService" ref="FilePlanService" />
        <property name="dispositionSelectionStrategy">
           <ref local="org_alfresco_module_rm_dispositionSelectionStrategy" />
        </property>
    </bean>

    <bean id="DispositionService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService</value>
        </property>
        <property name="target">
            <ref bean="dispositionService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="DispositionService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="DispositionService_security"/>
            </list>
        </property>
    </bean>

    <bean id="DispositionService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="DispositionService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.registerDispositionProperty=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.getDispositionProperties=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.getDispositionSchedule=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.getAssociatedDispositionSchedule=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.getAssociatedRecordsManagementContainer=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.hasDisposableItems=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.isDisposableItem=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.getDisposableItems=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.createDispositionSchedule=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.addDispositionActionDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.removeDispositionActionDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.updateDispositionActionDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.isNextDispositionActionEligible=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.getNextDispositionAction=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.getCompletedDispositionActions=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.getLastCompletedDispostionAction=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.disposition.DispositionService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <!--  Capability Service -->

    <bean id="capabilityService" class="org.alfresco.module.org_alfresco_module_rm.capability.CapabilityServiceImpl">
    </bean>

    <bean id="CapabilityService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.capability.CapabilityService</value>
        </property>
        <property name="target">
            <ref bean="capabilityService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="CapabilityService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <!-- <idref local="CapabilityService_security"/>  -->
            </list>
        </property>
    </bean>

    <bean id="CapabilityService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="CapabilityService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.capability.CapabilityService.*=RM_ALLOW
                ]]>
            </value>
        </property>
    </bean>

    <!--  Records Management Search Service -->

    <bean id="recordsManagementSearchService" class="org.alfresco.module.org_alfresco_module_rm.search.RecordsManagementSearchServiceImpl">
        <property name="fileFolderService" ref="FileFolderService"/>
        <property name="siteService" ref="SiteService"/>
        <property name="namespaceService" ref="NamespaceService" />
        <property name="searchService" ref="SearchService" />
        <property name="reportsJSON">
        	<value>
                <![CDATA[
                [
                	{
                		"name" : "Vital Records Due For Review",
                		"description" : "All records currently due for review.",
                		"search" : "rma:reviewAsOf:[MIN TO TODAY]",
                		"searchparams" :
                		{
                			"records" : true,
                			"vitalrecords" : true
                		}
                	},
                	{
                		"name" : "Incomplete Records",
                		"description" : "All incomplete records.",
                		"search" : "ISNODE:T AND NOT ASPECT:\"rma:declaredRecord\"",
                		"searchparams" :
                		{
                			"records" : true,
                			"recordfolders" : false,
                			"undeclaredrecords" : true
                		}
                	},
                	{
                		"name" : "Records Eligible For Cutoff",
                		"description" : "All records currently eligible for cutoff.",
                		"search" : "dispositionActionName:\"cutoff\" AND (dispositionEventsEligible:true OR dispositionActionAsOf:[MIN TO TODAY])",
                		"searchparams" :
                		{
                			"records" : true,
                			"recordfolders" : true
                		}
                	},
                	{
                		"name" : "Records Eligible For Transfer",
                		"description" : "All records currently eligible for transfer.",
                		"search" : "dispositionActionName:\"transfer\" AND (dispositionEventsEligible:true OR dispositionActionAsOf:[MIN TO TODAY]) AND NOT ASPECT:\"rma:transferred\" AND NOT ASPECT:\"rma:transferring\"",
                		"searchparams" :
                		{
                			"records" : true,
                			"recordfolders" : true,
                			"cutoff" : true
                		}
                	},
                	{
                		"name" : "Records Eligible For Destruction",
                		"description" : "All records currently eligible for destruction.",
                		"search" : "dispositionActionName:\"destroy\" AND (dispositionEventsEligible:true OR dispositionActionAsOf:[MIN TO TODAY]) AND NOT ASPECT:\"rma:ghosted\"",
                		"searchparams" :
                		{
                			"records" : true,
                			"recordfolders" : true,
                			"cutoff" : true
                		}
                	},
                	{
                		"name" : "Frozen Records",
                		"description" : "All frozen records.",
                		"search" : "ISNODE:T",
                		"searchparams" :
                		{
                			"records" : true,
                			"recordfolders" : true,
                			"frozen" : true,
                			"undeclaredrecords" : true
                		}
                	}
                ]
                ]]>
            </value>
        </property>
    </bean>

    <bean id="RecordsManagementSearchService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.search.RecordsManagementSearchService</value>
        </property>
        <property name="target">
            <ref bean="recordsManagementSearchService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="RecordsManagementSearchService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="RecordsManagementSearchService_security"/>
            </list>
        </property>
    </bean>

    <bean id="RecordsManagementSearchService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="RecordsManagementSearchService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.search.RecordsManagementSearchService.search=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.search.RecordsManagementSearchService.getSavedSearches=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.search.RecordsManagementSearchService.getSavedSearch=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.search.RecordsManagementSearchService.saveSearch=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.search.RecordsManagementSearchService.deleteSavedSearch=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.search.RecordsManagementSearchService.addReports=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.search.RecordsManagementSearchService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <!--  File Plan Service -->

	<bean id="filePlanService"
	      parent="baseService"
          class="org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanServiceImpl">
        <!--  NOTE:  for some reason we need to grab these references within the class to avoid cyclic Spring issues! -->
        <!-- <property name="permissionService" ref="permissionService"/> -->
        <!-- <property name="nodeDAO" ref="nodeDAO"/> -->
        <!-- <property name="internalNodeService" ref="nodeService"/> -->
        <!-- <property name="siteService" ref="SiteService" />  -->
    </bean>

    <bean id="FilePlanService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService</value>
        </property>
        <property name="target">
            <ref bean="filePlanService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="FilePlanService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="FilePlanService_security"/>
            </list>
        </property>
    </bean>

    <bean id="FilePlanService_transaction" parent="baseTransaction" />

    <bean id="FilePlanService_security" parent="baseSecurity">
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.isFilePlanComponent=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getFilePlanComponentKind=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getFilePlanComponentKindFromType=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.isFilePlan=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getFilePlans=RM_ALLOW,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getFilePlan=RM_ALLOW,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getFilePlanBySiteId=RM_ALLOW,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.existsUnfiledContainer=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getUnfiledContainer=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.createUnfiledContainer=RM.Write.0
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getHoldContainer=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.createHoldContainer=RM.Write.0
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getTransferContainer=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.createTransferContainer=RM.Write.0
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.createFilePlan=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getNodeRefPath=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.isFilePlanContainer=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.isRecordCategory=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getAllContained=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getContainedRecordCategories=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.getContainedRecordFolders=RM.Read.0,AFTER_RM.FilterNode
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.createRecordCategory=RM.Write.0
                org.alfresco.module.org_alfresco_module_rm.fileplan.FilePlanService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

	<!--  File Plan Permission Service -->

	<bean id="filePlanPermissionService"
          class="org.alfresco.module.org_alfresco_module_rm.security.FilePlanPermissionServiceImpl"
          init-method="init">
        <property name="permissionService" ref="PermissionService"/>
        <property name="nodeService" ref="NodeService"/>
        <property name="policyComponent" ref="policyComponent"/>
        <property name="recordsManagementService" ref="RecordsManagementService"/>
        <property name="filePlanService" ref="FilePlanService" />
        <property name="recordService" ref="RecordService" />
    </bean>

    <bean id="FilePlanPermissionService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.security.FilePlanPermissionService</value>
        </property>
        <property name="target">
            <ref bean="filePlanPermissionService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="FilePlanPermissionService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="FilePlanPermissionService_security"/>
            </list>
        </property>
    </bean>

    <bean id="FilePlanPermissionService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="FilePlanPermissionService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.security.FilePlanPermissionService.setPermission=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.security.FilePlanPermissionService.deletePermission=RM_ALLOW
    			org.alfresco.module.org_alfresco_module_rm.security.FilePlanPermissionService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <!-- File Plan Role Service -->

    <bean id="filePlanRoleService"
          class="org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleServiceImpl"
          init-method="init">
        <property name="capabilityService" ref="CapabilityService"/>
        <property name="authorityService" ref="AuthorityService"/>
        <property name="permissionService" ref="PermissionService"/>
        <property name="nodeService" ref="NodeService"/>
        <property name="policyComponent" ref="policyComponent"/>
        <property name="filePlanService" ref="FilePlanService" />
        <property name="filePlanAuthenticationService" ref="FilePlanAuthenticationService" />
        <property name="authenticationService" ref="AuthenticationService" />
        <property name="personService" ref="PersonService" />
        
        <!-- init repo for when a tenant is created -->
        <property name="bootstrapImporterModuleComponent" ref="org_alfresco_module_rm_bootstrapData"/>

    </bean>

    <bean id="FilePlanRoleService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService</value>
        </property>
        <property name="target">
            <ref bean="filePlanRoleService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="FilePlanRoleService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="FilePlanRoleService_security"/>
            </list>
        </property>
    </bean>

    <bean id="FilePlanRoleService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="FilePlanRoleService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
               <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.getRoles=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.getRolesByUser=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.getRole=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.existsRole=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.hasRMAdminRole=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.createRole=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.updateRole=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.deleteRole=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.getUsersAssignedToRole=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.getGroupsAssignedToRole=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.getAllAssignedToRole=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.assignRoleToAuthority=RM_CAP.0.rma:filePlanComponent.CreateModifyDestroyUsersAndGroups
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.unassignRoleFromAuthority=RM_CAP.0.rma:filePlanComponent.CreateModifyDestroyUsersAndGroups
                org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.getAllRolesContainerGroup=RM_ALLOW
    			org.alfresco.module.org_alfresco_module_rm.role.FilePlanRoleService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>


    <!--  Records Management Extended Security Service -->

    <bean id="extendedSecurityService"
          class="org.alfresco.module.org_alfresco_module_rm.security.ExtendedSecurityServiceImpl"
          init-method="init"
          parent="baseService">
        <property name="policyComponent" ref="policyComponent"/>
        <property name="recordService" ref="recordService"/>
        <property name="nodeService" ref="nodeService"/>
        <property name="filePlanService" ref="filePlanService" />
        <property name="filePlanRoleService" ref="filePlanRoleService" />
    </bean>

    <bean id="ExtendedSecurityService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.security.ExtendedSecurityService</value>
        </property>
        <property name="target">
            <ref bean="extendedSecurityService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="ExtendedSecurityService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="ExtendedSecurityService_security"/>
            </list>
        </property>
    </bean>

    <bean id="ExtendedSecurityService_transaction" parent="baseTransaction"/>

    <bean id="ExtendedSecurityService_security" parent="baseSecurity">
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
    			org.alfresco.module.org_alfresco_module_rm.security.ExtendedSecurityService.*=RM_ALLOW
                ]]>
            </value>
        </property>
    </bean>

    <!--  Model Security service -->

    <bean id="modelSecurityService"
          class="org.alfresco.module.org_alfresco_module_rm.model.security.ModelSecurityServiceImpl"
          init-method="init">
        <property name="enabled" value="true" />
    	<property name="policyComponent" ref="policyComponent" />
    	<property name="nodeService" ref="NodeService" />
    	<property name="namespaceService" ref="namespaceService" />
    	<property name="filePlanService" ref="FilePlanService" />
    </bean>

    <bean id="ModelSecurityService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.model.security.ModelSecurityService</value>
        </property>
        <property name="target">
            <ref bean="modelSecurityService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="ModelSecurityService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="ModelSecurityService_security"/>
            </list>
        </property>
    </bean>

    <bean id="ModelSecurityService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="ModelSecurityService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
    			org.alfresco.module.org_alfresco_module_rm.model.security.ModelSecurityService.*=RM_ALLOW
                ]]>
            </value>
        </property>
    </bean>

    <!-- Records Management Action Service -->

    <bean id="recordsManagementActionService" class="org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionServiceImpl" init-method="init">
        <property name="policyComponent" ref="policyComponent"/>
        <property name="nodeService" ref="nodeService"/>
    </bean>

    <bean id="RecordsManagementActionService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService</value>
        </property>
        <property name="target">
            <ref bean="recordsManagementActionService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="RecordsManagementActionService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="RecordsManagementActionService_security"/>
            </list>
        </property>
    </bean>

    <bean id="RecordsManagementActionService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>


    <bean id="RecordsManagementActionService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.getRecordsManagementActions=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.getRecordsManagementActionConditions=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.getDispositionActions=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.getRecordsManagementAction=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.getDispositionAction=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.executeRecordsManagementAction=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.executeRecordsManagementAction=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.executeRecordsManagementAction=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.executeRecordsManagementAction=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.executeRecordsManagementAction=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.register=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.register=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.action.RecordsManagementActionService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <!-- Records Management Event Service -->

    <bean id="recordsManagementEventService" class="org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventServiceImpl">
      <property name="nodeService" ref="NodeService"/>
      <property name="contentService" ref="ContentService"/>
    </bean>

    <bean id="RecordsManagementEventService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService</value>
        </property>
        <property name="target">
            <ref bean="recordsManagementEventService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="RecordsManagementEventService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="RecordsManagementEventService_security"/>
            </list>
        </property>
    </bean>

    <bean id="RecordsManagementEventService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>


    <bean id="RecordsManagementEventService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.registerEventType=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.getEventTypes=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.getEventType=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.getEvents=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.getEvent=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.addEvent=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.removeEvent=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.existsEvent=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.canCreateEvent=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.canEditEvent=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.event.RecordsManagementEventService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <!-- Records Management Admin Service -->

    <bean id="recordsManagementAdminService" class="org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminServiceImpl" init-method="init">
        <property name="dictionaryService" ref="DictionaryService"/>
        <property name="namespaceService" ref="NamespaceService"/>
        <property name="nodeService" ref="NodeService"/>
        <property name="policyComponent" ref="policyComponent"/>
        <property name="contentService" ref="contentService"/>
        <property name="dictionaryRepositoryBootstrap" ref="dictionaryRepositoryBootstrap"/>
        <property name="customisableTypes">
        	<list>
        	    <value>rma:recordCategory</value>
        		<value>rma:recordFolder</value>
        		<value>rma:record</value>
        		<value>rma:nonElectronicDocument</value>
        	</list>
        </property>
    </bean>

    <bean id="RecordsManagementAdminService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService</value>
        </property>
        <property name="target">
            <ref bean="recordsManagementAdminService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="RecordsManagementAdminService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="RecordsManagementAdminService_security"/>
            </list>
        </property>
    </bean>

    <bean id="RecordsManagementAdminService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>


    <bean id="RecordsManagementAdminService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.initialiseCustomModel=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.getCustomisable=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.isCustomisable=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.makeCustomisable=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.unmakeCustomisable=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.existsCustomProperty=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.getCustomPropertyDefinitions=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.addCustomPropertyDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.updateCustomPropertyDefinitionName=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.setCustomPropertyDefinitionLabel=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.setCustomPropertyDefinitionConstraint=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.removeCustomPropertyDefinitionConstraints=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.removeCustomPropertyDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.addCustomAssocDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.addCustomChildAssocDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.updateCustomAssocDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.updateCustomChildAssocDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.getCustomReferenceDefinitions=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.getCustomReferencesFrom=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.getCustomReferencesTo=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.getCustomChildReferences=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.getCustomParentReferences=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.addCustomReference=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.removeCustomReference=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.getCustomConstraintDefinitions=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.addCustomConstraintDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.removeCustomConstraintDefinition=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.changeCustomConstraintValues=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.getQNameForClientId=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.splitSourceTargetId=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.getCompoundIdFor=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.admin.RecordsManagementAdminService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <!--  Freeze Service  -->

    <bean id="freezeService" class="org.alfresco.module.org_alfresco_module_rm.freeze.FreezeServiceImpl" init-method="init">
        <property name="policyComponent" ref="policyComponent" />
        <property name="recordsManagementService" ref="RecordsManagementService" />
        <property name="nodeService" ref="nodeService" />
        <property name="dictionaryService" ref="dictionaryService" />
        <property name="recordService" ref="RecordService" />
        <property name="filePlanService" ref="FilePlanService" />
        <property name="permissionService" ref="PermissionService" />
        <property name="filePlanRoleService" ref="FilePlanRoleService" />
    </bean>

    <bean id="FreezeService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService</value>
        </property>
        <property name="target">
            <ref bean="freezeService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="FreezeService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="FreezeService_security"/>
            </list>
        </property>
    </bean>

    <bean id="FreezeService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="FreezeService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.isHold=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.isFrozen=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.getFrozen=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.freeze=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.unFreeze=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.relinquish=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.getReason=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.updateReason=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.getHolds=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.hasFrozenChildren=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.getFreezeDate=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.getFreezeInitiator=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.freeze.FreezeService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <!-- Records Management Audit Service -->

    <bean id="recordsManagementAuditService" class="org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditServiceImpl" init-method="init">
        <property name="policyComponent" ref="policyComponent" />
        <property name="dictionaryService" ref="dictionaryService" />
        <property name="transactionService" ref="transactionService" />
        <property name="nodeService" ref="nodeService" />
        <property name="auditComponent" ref="auditComponent" />
        <property name="auditService" ref="auditService" />
        <property name="contentService" ref="ContentService" />
        <property name="recordsManagementService" ref="RecordsManagementService" />
        <property name="recordsManagementActionService" ref="RecordsManagementActionService" />
        <property name="filePlanService" ref="FilePlanService" />
    </bean>

    <bean id="RecordsManagementAuditService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService</value>
        </property>
        <property name="target">
            <ref bean="recordsManagementAuditService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="RecordsManagementAuditService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="RecordsManagementAuditService_security"/>
            </list>
        </property>
    </bean>

    <bean id="RecordsManagementAuditService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="RecordsManagementAuditService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.registerAuditEvent=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.auditEvent=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.clearAuditLog=RM_CAP.0.rma:filePlanComponent.DeleteAudit
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.getAuditTrail=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.getAuditTrailFile=RM_ALLOW       
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.getDateAuditLogLastStarted=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.getDateAuditLogLastStopped=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.isAuditLogEnabled=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.startAuditLog=RM_CAP.0.rma:filePlanComponent.EnableDisableAuditByTypes
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.stopAuditLog=RM_CAP.0.rma:filePlanComponent.EnableDisableAuditByTypes
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.fileAuditTrailAsRecord=RM_CAP.1.rma:filePlanComponent.DeclareAuditAsRecord
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.getAuditEvents=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.audit.RecordsManagementAuditService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <!--  Record Folder Service -->

    <bean id="recordFolderService" class="org.alfresco.module.org_alfresco_module_rm.recordfolder.RecordFolderServiceImpl" init-method="init">
        <property name="nodeService" ref="NodeService"/>
        <property name="policyComponent" ref="policyComponent" />
        <property name="dispositionService" ref="DispositionService" />
    </bean>

    <!--  Record Service -->

    <bean id="recordService" class="org.alfresco.module.org_alfresco_module_rm.record.RecordServiceImpl" init-method="init">
        <property name="nodeService" ref="NodeService"/>
        <property name="dictionaryService" ref="DictionaryService"/>
        <property name="identifierService" ref="recordsManagementIdentifierService"/>
        <property name="permissionService" ref="ExtendedPermissionService"/>
        <property name="extendedSecurityService" ref="ExtendedSecurityService" />
        <property name="recordsManagementService" ref="RecordsManagementService" />
        <property name="policyComponent" ref="policyComponent" />
        <property name="dispositionService" ref="DispositionService" />
        <property name="filePlanService" ref="FilePlanService" />
        <property name="ownableService" ref="OwnableService" />
        <property name="notificationHelper" ref="recordsManagementNotificationHelper"/>
        <property name="capabilityService" ref="CapabilityService" />
        <property name="ruleService" ref="RuleService" />
        <property name="fileFolderService" ref="FileFolderService" />
    </bean>

    <bean id="RecordService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.record.RecordService</value>
        </property>
        <property name="target">
            <ref bean="recordService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="RecordService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="RecordService_security"/>
            </list>
        </property>
    </bean>

    <bean id="RecordService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="RecordService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.record.RecordService.getRecordMetaDataAspects=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.record.RecordService.isRecord=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.record.RecordService.isDeclared=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.record.RecordService.isFiled=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.record.RecordService.createRecord=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.record.RecordService.hideRecord=RM_ALLOW
                org.alfresco.module.org_alfresco_module_rm.record.RecordService.isPropertyEditable=RM.Read.0
                org.alfresco.module.org_alfresco_module_rm.record.RecordService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <!--  File Plan Authentication Service -->

    <bean id="filePlanAuthenticationService"
          class="org.alfresco.module.org_alfresco_module_rm.security.FilePlanAuthenticationServiceImpl">
     	<property name="rmAdminUserName" value="${bootstrap.rmadmin.name}" />
        <property name="tenantService">
            <ref bean="tenantService"/>
        </property>
    </bean>

    <bean id="FilePlanAuthenticationService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.security.FilePlanAuthenticationService</value>
        </property>
        <property name="target">
            <ref bean="filePlanAuthenticationService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="FilePlanAuthenticationService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="FilePlanAuthenticationService_security"/>
            </list>
        </property>
    </bean>

    <bean id="FilePlanAuthenticationService_transaction" parent="baseTransaction"/>

    <bean id="FilePlanAuthenticationService_security" parent="baseSecurity">
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
    			org.alfresco.module.org_alfresco_module_rm.security.FilePlanAuthenticationService.*=RM_ALLOW
                ]]>
            </value>
        </property>
    </bean>


    <!--  Custom EMail Mapping Service -->
    <bean id="customEmailMappingService"
      class="org.alfresco.module.org_alfresco_module_rm.email.CustomEmailMappingServiceImpl" >
      <property name="extracter" ref="extracter.RFC822" />
      <property name="nodeService" ref="nodeService" />
      <property name="contentService" ref="contentService"/>
      <property name="namespacePrefixResolver">
         <ref bean="namespaceService"></ref>
      </property>
      <property name="policyComponent"><ref bean="policyComponent" /></property>
      <property name="transactionService"><ref bean="transactionService" /></property>
      <property name="emailMappingKeys">
         <list>
            <value>Thread-Index</value>
            <value>messageFrom</value>
            <value>messageTo</value>
            <value>messageCc</value>
            <value>messageSubject</value>
            <value>messageSent</value>
         </list>
      </property>
   </bean>

    <bean id="CustomEmailMappingService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

        <bean id="CustomEmailMappingService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                    org.alfresco.module.org_alfresco_module_rm.email.CustomEmailMappingService.getCustomMappings=RM_CAP.-1.rma:filePlanComponent.MapEmailMetadata
                    org.alfresco.module.org_alfresco_module_rm.email.CustomEmailMappingService.addCustomMapping=RM_CAP.-1.rma:filePlanComponent.MapEmailMetadata
                    org.alfresco.module.org_alfresco_module_rm.email.CustomEmailMappingService.deleteCustomMapping=RM_CAP.-1.rma:filePlanComponent.MapEmailMetadata
                    org.alfresco.module.org_alfresco_module_rm.email.CustomEmailMappingService.getEmailMappingKeys=RM_ALLOW
                    org.alfresco.module.org_alfresco_module_rm.email.CustomEmailMappingService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>


    <bean id="CustomEmailMappingService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <list>
                <value>org.alfresco.module.org_alfresco_module_rm.email.CustomEmailMappingService</value>
            </list>
        </property>
        <property name="targetName">
            <value>customEmailMappingService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="CustomEmailMappingService_transaction"/>
                <idref local="CustomEmailMappingService_security"/>
                <idref bean="exceptionTranslator"/>
            </list>
        </property>
    </bean>

    <!--  RM Notification Helper -->
    <bean id="recordsManagementNotificationHelper" class="org.alfresco.module.org_alfresco_module_rm.notification.RecordsManagementNotificationHelper" >
        <property name="filePlanRoleService" ref="FilePlanRoleService"/>
    	<property name="notificationService" ref="NotificationService"/>
    	<property name="filePlanService" ref="FilePlanService"/>
  		<property name="nodeService" ref="nodeService"/>
  		<property name="tenantAdminService" ref="tenantAdminService"/>
        <property name="namespaceService" ref="namespaceService"/>
        <property name="searchService" ref="searchService"/>
        <property name="siteService" ref="SiteService" />
        <property name="authorityService" ref="authorityService" />
    	<property name="notificationRole" value="${rm.notification.role}"/>
    </bean>

    <!-- RM caveats -->

    <bean id="caveatConfigService" class="org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigServiceImpl">
        <property name="caveatConfigComponent" ref="caveatConfigComponent"/>
        <property name="dictionaryService" ref="dictionaryService"/>
        <property name="namespaceService" ref="namespaceService" />
        <property name="recordsManagementAdminService" ref = "recordsManagementAdminService"/>
    </bean>

    <bean id="caveatConfigComponent" class="org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigComponentImpl">
        <property name="policyComponent" ref="policyComponent"/>
        <property name="contentService" ref="contentService"/>
        <property name="dictionaryService" ref="dictionaryService"/>
        <property name="namespaceService" ref="namespaceService"/>
        <property name="authorityService" ref="authorityService"/>
        <property name="personService" ref="personService"/>
        <property name="nodeService" ref="nodeService"/>

        <property name="caveatAspects" ref="caveatAspects"/>
        <property name="caveatModels" ref="caveatModels"/>

        <property name="caveatConfig" ref="caveatConfigCache"/>

    </bean>

     <!-- ===================================== -->
 	 <!-- Record Management Caveat Config Cache -->
 	 <!-- ===================================== -->

 	 <!-- The cross-transaction shared cache for in-memory CaveatConfig -->

 	 <bean name="caveatConfigSharedCache" class="org.alfresco.repo.cache.DefaultSimpleCache"/>

    <!-- The transactional cache for in-memory CaveatConfig -->

    <bean name="caveatConfigCache" class="org.alfresco.repo.cache.TransactionalCache">
        <property name="sharedCache">
            <ref bean="caveatConfigSharedCache" />
        </property>
        <property name="name">
            <value>org.alfresco.caveatConfigTransactionalCache</value>
        </property>
        <property name="maxCacheSize" value="500" />
        <property name="mutable" value="true" />
        <property name="disableSharedCache" value="${system.cache.disableMutableSharedCaches}" />
    </bean>

    <bean id="caveatAspects" class="java.util.ArrayList" >
      <constructor-arg>
         <list>
            <value>{http://www.alfresco.org/model/recordsmanagement/1.0}recordComponentIdentifier</value>
         </list>
      </constructor-arg>
   </bean>

   <bean id="caveatModels" class="java.util.ArrayList" >
      <constructor-arg>
         <list>
            <value>{http://www.alfresco.org/model/rmcustom/1.0}rmcustom</value>
         </list>
      </constructor-arg>
   </bean>

    <bean id="rmListOfValuesContraintInit" class="org.alfresco.module.org_alfresco_module_rm.caveat.RMListOfValuesConstraint">
        <property name="caveatConfigService" ref="caveatConfigService"/>
    </bean>

    <bean id="CaveatConfigService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.getRMAllowedValues=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.hasAccess=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.getRMConstraint=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.getAllRMConstraints=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.getListDetails=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.updateOrCreateCaveatConfig=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.addRMConstraint=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.updateRMConstraintAllowedValues=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.updateRMConstraintTitle=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.deleteRMConstraint=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.addRMConstraintListValue=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.updateRMConstraintListAuthority=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.removeRMConstraintListAuthority=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.updateRMConstraintListValue=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.removeRMConstraintListValue=RM_ALLOW
                   org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService.*=RM_DENY
                ]]>
            </value>
        </property>
    </bean>

    <bean id="CaveatConfigService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="CaveatConfigService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <list>
                <value>org.alfresco.module.org_alfresco_module_rm.caveat.RMCaveatConfigService</value>
            </list>
        </property>
        <property name="targetName">
            <value>caveatConfigService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="CaveatConfigService_transaction"/>
                <idref local="CaveatConfigService_security"/>
                <idref bean="exceptionTranslator"/>
            </list>
        </property>
    </bean>

    <!--  Site service work around (see https://issues.alfresco.com/jira/browse/RM-387) -->
    <bean name="siteGetChildrenCannedQueryFactory" class="org.alfresco.module.org_alfresco_module_rm.site.GetChildrenCannedQueryFactory">
        <property name="registry" ref="siteCannedQueryRegistry"/>
        <property name="dictionaryService" ref="dictionaryService"/>
        <property name="tenantService" ref="tenantService"/>
        <property name="nodeDAO" ref="nodeDAO"/>
        <property name="nodeService" ref="nodeService"/>
        <property name="qnameDAO" ref="qnameDAO"/>
        <property name="localeDAO" ref="localeDAO"/>
        <property name="contentDataDAO" ref="contentDataDAO"/>
        <property name="cannedQueryDAO" ref="cannedQueryDAO"/>
        <property name="methodSecurity" ref="SiteService_security_listSites"/>
    </bean>

    <!--  Data Set Service -->

    <bean id="dataSetService" class="org.alfresco.module.org_alfresco_module_rm.dataset.DataSetServiceImpl">
        <property name="importerService" ref="ImporterService"/>
        <property name="searchService" ref="SearchService"/>
        <property name="nodeService" ref="NodeService"/>
        <property name="filePlanService" ref="FilePlanService"/>
        <property name="permissionService" ref="PermissionService"/>
        <property name="authorityService" ref="AuthorityService"/>
        <property name="filePlanRoleService" ref="FilePlanRoleService"/>
        <property name="recordsManagementSearchBehaviour" ref="recordsManagementSearchBehaviour"/>
        <property name="dispositionService" ref="DispositionService"/>
    </bean>

    <bean id="DataSetService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.module.org_alfresco_module_rm.dataset.DataSetService</value>
        </property>
        <property name="target">
            <ref bean="dataSetService"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref local="DataSetService_transaction"/>
                <idref bean="exceptionTranslator"/>
                <idref local="DataSetService_security"/>
            </list>
        </property>
    </bean>

    <bean id="DataSetService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
    </bean>

    <bean id="DataSetService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref bean="accessDecisionManager"/>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                <![CDATA[
                org.alfresco.module.org_alfresco_module_rm.dataset.DataSetService.*=RM_ALLOW
                ]]>
            </value>
        </property>
    </bean>

    <!-- Data Set Implementations -->

    <bean id="dataSetBase" abstract="true" init-method="register" class="org.alfresco.module.org_alfresco_module_rm.dataset.DataSetBase">
        <property name="dataSetService" ref="dataSetService"/>
    </bean>

    <bean id="dataSetDOD5015" parent="dataSetBase">
        <property name="id" value="dod5015"/>
        <property name="path" value="alfresco/module/org_alfresco_module_rm/dod5015/DODExampleFilePlan.xml" />
    </bean>

    <!--
    <bean id="authorityDAO" class="org.alfresco.repo.security.authority.RMAuthorityDAOImpl" init-method="init">
        <property name="storeUrl">
            <value>${spaces.store}</value>
        </property>
        <property name="nodeService">
            <ref bean="mlAwareNodeService" />
        </property>
        <property name="searchService">
            <ref bean="admSearchService" />
        </property>
        <property name="namespacePrefixResolver">
            <ref bean="namespaceService" />
        </property>
        <property name="dictionaryService">
            <ref bean="dictionaryService" />
        </property>
        <property name="personService">
            <ref bean="personService" />
        </property>
        <property name="tenantService">
            <ref bean="tenantService" />
        </property>
        <property name="authorityLookupCache">
            <ref bean="authorityLookupCache" />
        </property>
        <property name="userAuthorityCache">
            <ref bean="userToAuthorityCache" />
        </property>
        <property name="childAuthorityCache">
            <ref bean="authorityToChildAuthorityCache" />
        </property>
        <property name="zoneAuthorityCache">
            <ref bean="zoneToAuthorityCache" />
        </property>
        <property name="singletonCache">
            <ref bean="immutableSingletonCache" />
        </property>
        <property name="policyComponent">
            <ref bean="policyComponent"/>
        </property>
        <property name="cannedQueryRegistry" ref="cannedQueryRegistry" />
        <property name="cannedQueryDAO" ref="cannedQueryDAO" />
        <property name="aclDAO" ref="aclDAO" />
        <property name="authorityBridgeDAO" ref="authorityBridgeDAO" />
        <property name="authorityBridgeTableCache" ref="authorityBridgeTableCache" />
        <property name="useBridgeTable" value="${authority.useBridgeTable}" />
    </bean>
    -->

</beans>
