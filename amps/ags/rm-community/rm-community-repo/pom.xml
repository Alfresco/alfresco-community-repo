<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <artifactId>alfresco-governance-services-community-repo</artifactId>
   <packaging>amp</packaging>
   <name>Alfresco Governance Services Community Repository AMP</name>
   <description>Alfresco Governance Services Repository Extension</description>

   <parent>
      <groupId>org.alfresco</groupId>
      <artifactId>alfresco-governance-services-community-repo-parent</artifactId>
      <version>11.7-ags-1.0-SNAPSHOT</version>
   </parent>

   <properties>
      <alfresco.data.location>${basedir}/target/alf_test_data</alfresco.data.location>
      <alfresco.db.hibernate.dialect>org.alfresco.repo.domain.dialect.MySQLInnoDBDialect</alfresco.db.hibernate.dialect>
      <alfresco.db.name>alfresco</alfresco.db.name>
      <alfresco.db.username>alfresco</alfresco.db.username>
      <alfresco.db.password>alfresco</alfresco.db.password>
      <alfresco.db.host>localhost</alfresco.db.host>
      <alfresco.test.db.name>alfresco-test</alfresco.test.db.name>

      <mysql.version>5.7.23</mysql.version>
      <mysql.port>3306</mysql.port>
      <mysql.tests.port>3307</mysql.tests.port>

      <postgresql.port>5432</postgresql.port>
      <!--This prevents a clash when postgres is already running natively on the machine.-->
      <postgresql.tests.port>5431</postgresql.tests.port>

      <alfresco.repo.artifactId>alfresco-platform</alfresco.repo.artifactId>
      <alfresco.postgres.version>9.1-901.jdbc4</alfresco.postgres.version>

      <image.name>alfresco/alfresco-governance-repository-community</image.name>

      <maven.javadoc.skip>false</maven.javadoc.skip>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-data-model</artifactId>
         <version>${project.version}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-remote-api</artifactId>
         <version>${project.version}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-repository</artifactId>
         <version>${project.version}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-repository</artifactId>
         <version>${project.version}</version>
         <classifier>tests</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-remote-api</artifactId>
         <version>${project.version}</version>
         <classifier>tests</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-core</artifactId>
         <version>${project.version}</version>
         <classifier>tests</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.alfresco.surf</groupId>
         <artifactId>spring-webscripts</artifactId>
         <classifier>tests</classifier>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>io.takari.junit</groupId>
         <artifactId>takari-cpsuite</artifactId>
         <version>1.2.7</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>postgresql</groupId>
         <artifactId>postgresql</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>mysql</groupId>
         <artifactId>mysql-connector-java</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.reflections</groupId>
         <artifactId>reflections</artifactId>
         <version>0.9.12</version>
         <scope>test</scope>
      </dependency>
      <!-- swagger parser -->
      <dependency>
         <groupId>io.swagger</groupId>
         <artifactId>swagger-parser</artifactId>
         <version>1.0.52</version>
         <scope>test</scope>
      </dependency>
      <!-- https://mvnrepository.com/artifact/com.github.fge/json-schema-validator -->
      <dependency>
         <groupId>com.github.fge</groupId>
         <artifactId>json-schema-validator</artifactId>
         <version>2.2.6</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-all</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-core</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-annotations</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.datatype</groupId>
         <artifactId>jackson-datatype-joda</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.dataformat</groupId>
         <artifactId>jackson-dataformat-yaml</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <sourceDirectory>source/java</sourceDirectory>
      <testSourceDirectory>test/java</testSourceDirectory>
      <resources>
         <resource>
            <directory>config</directory>
            <filtering>${app.filtering.enabled}</filtering>
         </resource>
      </resources>
      <testResources>
         <testResource>
            <directory>unit-test/resources</directory>
         </testResource>
         <testResource>
            <directory>test/resources</directory>
         </testResource>
      </testResources>

      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>add-source</id>
                  <goals>
                     <goal>add-source</goal>
                  </goals>
                  <configuration>
                     <sources>
                        <source>source/compatibility</source>
                     </sources>
                  </configuration>
               </execution>
               <execution>
                  <id>add-test-source</id>
                  <goals>
                     <goal>add-test-source</goal>
                  </goals>
                  <configuration>
                     <sources>
                        <source>unit-test/java</source>
                     </sources>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <target>
                        <move todir="${project.build.directory}/${project.build.finalName}/config/alfresco">
                           <fileset dir="${project.build.outputDirectory}/alfresco" />
                        </move>
                        <copy file="${project.build.directory}/${project.build.finalName}/config/alfresco/module/org_alfresco_module_rm/module.properties" todir="${project.build.directory}/${project.build.finalName}" />
                     </target>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <executions>
               <execution>
                  <phase>initialize</phase>
                  <goals>
                     <goal>read-project-properties</goal>
                  </goals>
                  <configuration>
                     <files>
                        <file>${basedir}/src/main/resources/local.properties</file>
                     </files>
                     <quiet>true</quiet>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <includes>
                  <include>**/AllUnitTestSuite.class</include>
               </includes>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
               <execution>
                  <id>integration-tests</id>
                  <phase>integration-test</phase>
                  <goals>
                     <goal>integration-test</goal>
                     <goal>verify</goal>
                  </goals>
                  <configuration>
                     <systemPropertyVariables>
                        <db.name>${db.name}</db.name>
                        <db.driver>${alfresco.db.datasource.class}</db.driver>
                        <db.url>${alfresco.db.url}</db.url>
                        <dir.root>${project.build.directory}/alf-data-test</dir.root>
                     </systemPropertyVariables>
                     <includes>
                        <include>**/AllTestSuite.class</include>
                     </includes>
                     <additionalClasspathElements>
                        <additionalClasspathElement>${project.build.directory}/${project.build.finalName}/config</additionalClasspathElement>
                     </additionalClasspathElements>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>fetch-share-services-amp</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>copy</goal>
                  </goals>
                  <configuration>
                     <artifactItems>
                        <artifactItem>
                           <groupId>org.alfresco</groupId>
                           <artifactId>alfresco-share-services</artifactId>
                           <version>${project.version}</version>
                           <type>amp</type>
                        </artifactItem>
                        <artifactItem>
                           <groupId>org.alfresco</groupId>
                           <artifactId>alfresco-governance-services-community-rest-api-explorer</artifactId>
                           <version>${project.version}</version>
                           <type>war</type>
                           <destFileName>gs-api-explorer-${project.version}.war</destFileName>
                        </artifactItem>
                     </artifactItems>
                     <outputDirectory>${project.build.directory}</outputDirectory>
                  </configuration>
               </execution>
               <execution>
                  <id>unpack-alfresco</id>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${app.amp.client.war.folder}</outputDirectory>
                     <artifactItems>
                        <artifactItem>
                           <groupId>org.alfresco</groupId>
                           <artifactId>content-services-community</artifactId>
                           <type>war</type>
                           <version>${project.version}</version>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.alfresco.maven.plugin</groupId>
            <artifactId>alfresco-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>attach-alfresco-governance-services-jar</id>
                  <goals>
                     <goal>amp</goal>
                  </goals>
                  <configuration>
                     <attachClasses>true</attachClasses>
                     <attachConfig>true</attachConfig>
                     <includeDependencies>true</includeDependencies>
                  </configuration>
               </execution>
               <execution>
                  <id>amps-to-war-overlay</id>
                  <phase>package</phase>
                  <goals>
                     <goal>install</goal>
                  </goals>
               </execution>
               <execution>
                  <id>install-share-services-amp</id>
                  <goals>
                     <goal>install</goal>
                  </goals>
                  <phase>prepare-package</phase>
                  <configuration>
                     <backup>true</backup>
                     <ampLocation>${project.build.directory}/alfresco-share-services-${project.version}.amp</ampLocation>
                     <warLocation>${app.amp.client.war.folder}</warLocation>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
               <execution>
                  <goals>
                     <goal>test-jar</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <excludes>
                  <exclude>**/alfresco-global.properties</exclude>
               </excludes>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <configuration>
               <licenseName>alfresco_community</licenseName>
               <roots>
                  <root>source/java</root>
                  <root>unit-test/java</root>
                  <root>source/compatibility</root>
                  <root>config</root>
                  <root>test/java</root>
                  <root>test/resources</root>
               </roots>
            </configuration>
         </plugin>
      </plugins>

      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.eclipse.m2e</groupId>
               <artifactId>lifecycle-mapping</artifactId>
               <configuration>
                  <lifecycleMappingMetadata>
                     <pluginExecutions>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.codehaus.mojo</groupId>
                              <artifactId>properties-maven-plugin</artifactId>
                              <versionRange>[1.0-alpha-2,)</versionRange>
                              <goals>
                                 <goal>read-project-properties</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.codehaus.mojo</groupId>
                              <artifactId>license-maven-plugin</artifactId>
                              <versionRange>[1.8,)</versionRange>
                              <goals>
                                 <goal>update-file-header</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                     </pluginExecutions>
                  </lifecycleMappingMetadata>
               </configuration>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>

   <profiles>
      <profile>
         <id>use-mysql</id>
         <properties>
            <alfresco.db.name>${my.db.name}</alfresco.db.name>
            <alfresco.db.port>${my.db.port}</alfresco.db.port>
            <alfresco.db.hibernate.dialect>org.alfresco.repo.domain.dialect.MySQLInnoDBDialect</alfresco.db.hibernate.dialect>
            <alfresco.db.params />
            <alfresco.db.master.url>jdbc:mysql://${alfresco.db.host}:${alfresco.db.port}/${alfresco.db.name}</alfresco.db.master.url>
            <alfresco.db.url>jdbc:mysql://${alfresco.db.host}:${alfresco.db.port}/${alfresco.db.name}</alfresco.db.url>
            <alfresco.db.datasource.class>org.gjt.mm.mysql.Driver</alfresco.db.datasource.class>
         </properties>
      </profile>
      <profile>
         <id>use-postgres</id>
         <properties>
            <alfresco.db.name>${my.db.name}</alfresco.db.name>
            <alfresco.db.port>${my.db.port}</alfresco.db.port>
            <alfresco.db.hibernate.dialect>org.alfresco.repo.domain.dialect.PostgreSQLDialect</alfresco.db.hibernate.dialect>
            <alfresco.db.params />
            <alfresco.db.master.url>jdbc:postgresql:template1</alfresco.db.master.url>
            <alfresco.db.url>jdbc:postgresql:${alfresco.db.name}</alfresco.db.url>
            <alfresco.db.datasource.class>org.postgresql.Driver</alfresco.db.datasource.class>
         </properties>
      </profile>

      <!-- Profile used for running integration tests using postgres database -->
      <profile>
         <id>start-postgres</id>
         <properties>
            <db.name>${alfresco.test.db.name}</db.name>
            <alfresco.db.port>${postgresql.tests.port}</alfresco.db.port>
            <alfresco.db.master.url>jdbc:postgresql://${alfresco.db.host}:${alfresco.db.port}/${db.name}</alfresco.db.master.url>
            <alfresco.db.url>jdbc:postgresql://${alfresco.db.host}:${alfresco.db.port}/${db.name}</alfresco.db.url>
            <alfresco.db.datasource.class>org.postgresql.Driver</alfresco.db.datasource.class>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>io.fabric8</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <configuration>
                     <images>
                        <image>
                           <!-- TODO upgrade this old postgres version -->
                           <name>postgres:9.4.12</name>
                           <!--<name>postgres:13.1</name>-->
                           <run>
                              <ports>
                                 <port>${postgresql.tests.port}:${postgresql.port}</port>
                              </ports>
                              <env>
                                 <POSTGRES_PASSWORD>${alfresco.db.password}</POSTGRES_PASSWORD>
                                 <POSTGRES_USER>${alfresco.db.username}</POSTGRES_USER>
                                 <POSTGRES_DB>${alfresco.test.db.name}</POSTGRES_DB>
                              </env>
                              <cmd>
                                 <shell>-c max_connections=300</shell>
                              </cmd>
                              <wait>
                                 <log>database system is ready to accept connections</log>
                                 <time>20000</time>
                              </wait>
                           </run>
                        </image>
                        <image>
                           <name>alfresco/alfresco-activemq:${dependency.activemq.version}</name>
                           <run>
                              <ports>
                                 <port>${activemq.port1}:${activemq.port1}</port>
                                 <port>${activemq.port2}:${activemq.port2}</port>
                              </ports>
                           </run>
                        </image>
                     </images>
                  </configuration>
                  <executions>
                     <execution>
                        <id>before-integration-tests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                           <goal>stop</goal>
                           <goal>start</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>after-integration-tests</id>
                        <phase>post-integration-test</phase>
                        <goals>
                           <goal>stop</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- Profile used for running integration tests using mysql database -->
      <profile>
         <id>start-mysql</id>
         <properties>
            <db.name>${alfresco.db.name}</db.name>
            <alfresco.db.port>${mysql.tests.port}</alfresco.db.port>
            <alfresco.db.master.url>jdbc:mysql://${alfresco.db.host}:${alfresco.db.port}/${db.name}</alfresco.db.master.url>
            <alfresco.db.url>jdbc:mysql://${alfresco.db.host}:${alfresco.db.port}/${db.name}</alfresco.db.url>
            <alfresco.db.datasource.class>com.mysql.cj.jdbc.Driver</alfresco.db.datasource.class>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>io.fabric8</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <configuration>
                     <images>
                        <image>
                           <name>mysql:${mysql.version}</name>
                           <run>
                              <ports>
                                 <port>${mysql.tests.port}:${mysql.port}</port>
                              </ports>
                              <env>
                                 <MYSQL_ROOT_PASSWORD>${alfresco.db.password}</MYSQL_ROOT_PASSWORD>
                                 <MYSQL_PASSWORD>${alfresco.db.password}</MYSQL_PASSWORD>
                                 <MYSQL_USER>${alfresco.db.username}</MYSQL_USER>
                                 <MYSQL_DATABASE>${alfresco.db.name}</MYSQL_DATABASE>
                              </env>
                              <cmd>
                                 <arg>--transaction-isolation=READ-COMMITTED</arg>
                              </cmd>
                              <wait>
                                 <log>mysqld: ready for connections</log>
                                 <time>20000</time>
                              </wait>
                           </run>
                        </image>
                        <image>
                           <name>alfresco/alfresco-activemq:${dependency.activemq.version}</name>
                           <run>
                              <ports>
                                 <port>${activemq.port1}:${activemq.port1}</port>
                                 <port>${activemq.port2}:${activemq.port2}</port>
                              </ports>
                           </run>
                        </image>
                     </images>
                  </configuration>
                  <executions>
                     <execution>
                        <id>before-integration-tests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                           <goal>stop</goal>
                           <goal>start</goal>
                        </goals>
                     </execution>
                     <execution>
                        <id>after-integration-tests</id>
                        <phase>post-integration-test</phase>
                        <goals>
                           <goal>stop</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

       <profile>
          <!-- builds "image:latest" locally -->
          <id>communityDocker</id>
          <build>
             <plugins>
                <plugin>
                   <groupId>io.fabric8</groupId>
                   <artifactId>docker-maven-plugin</artifactId>
                   <configuration>
                      <images>
                         <image>
                            <name>${image.name}:${image.tag}</name>
                         </image>
                      </images>
                   </configuration>
                   <executions>
                      <execution>
                         <id>build-image</id>
                         <phase>package</phase>
                         <goals>
                            <goal>build</goal>
                         </goals>
                      </execution>
                   </executions>
                </plugin>
             </plugins>
          </build>
       </profile>

       <profile>
          <id>internal</id>
          <!-- publishes "image:latest" on Quay & DockerHub -->
          <build>
             <plugins>
                <plugin>
                   <groupId>io.fabric8</groupId>
                   <artifactId>docker-maven-plugin</artifactId>
                   <configuration>
                      <images>
                         <image>
                            <!-- Quay image -->
                            <name>${image.name}:${image.tag}</name>
                            <registry>${image.registry}</registry>
                         </image>
                         <image>
                            <!-- DockerHub image -->
                            <name>${image.name}:${image.tag}</name>
                         </image>
                      </images>
                   </configuration>
                   <executions>
                      <execution>
                         <id>build-push-image</id>
                         <phase>install</phase>
                         <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                         </goals>
                      </execution>
                   </executions>
                </plugin>
             </plugins>
          </build>
       </profile>
   </profiles>
</project>
