<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>

<beans>

   <!-- extend node service security to report capability details on failure -->
   <bean id="rm.NodeService_security" abstract="true" class="org.alfresco.module.org_alfresco_module_rm.security.RMMethodSecurityInterceptor"/>
   <bean class="org.alfresco.util.BeanExtender">
      <property name="beanName" value="NodeService_security" />
      <property name="extendingBeanName" value="rm.NodeService_security" />
   </bean>

   <!-- extended file folder bean definition -->
   <bean id="rm.fileFolderService" abstract="true" class="org.alfresco.repo.model.filefolder.ExtendedFileFolderServiceImpl">
      <property name="recordService" ref="RecordService" />
   </bean>
   <bean class="org.alfresco.util.BeanExtender">
      <property name="beanName" value="fileFolderService" />
      <property name="extendingBeanName" value="rm.fileFolderService" />
   </bean>

   <!-- extend file folder service security to report capability details on failure -->
   <bean id="rm.FileFolderService_security" abstract="true" class="org.alfresco.module.org_alfresco_module_rm.security.RMMethodSecurityInterceptor"/>
   <bean class="org.alfresco.util.BeanExtender">
      <property name="beanName" value="FileFolderService_security" />
      <property name="extendingBeanName" value="rm.FileFolderService_security" />
   </bean>

   <!-- Commented out due to startup error relating to proxyInterface-->
   <!-- extended QuickShare bean definition -->
   <!--<bean id="rm.QuickShareService" abstract="true"-->
         <!--class="org.alfresco.repo.quickshare.ExtendedQuickShareServiceImpl">-->
      <!--<property name="nodeService" ref="NodeService"/>-->
   <!--</bean>-->
   <!--<bean class="org.alfresco.util.BeanExtender">-->
      <!--<property name="beanName" value="QuickShareService"/>-->
      <!--<property name="extendingBeanName" value="rm.QuickShareService"/>-->
   <!--</bean>-->

   <bean id="ExtendedPermissionService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>org.alfresco.repo.security.permissions.impl.ExtendedPermissionService</value>
        </property>
        <property name="target">
            <ref bean="permissionServiceImpl"/>
        </property>
        <property name="interceptorNames">
            <list>
                <idref bean="PermissionService_transaction"/>
                <idref bean="AuditMethodInterceptor"/>
                <idref bean="exceptionTranslator"/>
                <idref bean="ExtendedPermissionService_security"/>
            </list>
        </property>
    </bean>

    <bean id="ExtendedPermissionService_security" class="org.alfresco.module.org_alfresco_module_rm.security.RMMethodSecurityInterceptor">
        <property name="authenticationManager"><ref bean="authenticationManager"/></property>
        <property name="accessDecisionManager"><ref bean="accessDecisionManager"/></property>
        <property name="afterInvocationManager"><ref bean="afterInvocationManager"/></property>
        <property name="objectDefinitionSource">
            <value>
                org.alfresco.service.cmr.security.PermissionService.getOwnerAuthority=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.getAllAuthorities=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.getAllPermission=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.getPermissions=ACL_NODE.0.sys:base.ReadPermissions
                org.alfresco.service.cmr.security.PermissionService.getAllSetPermissions=ACL_NODE.0.sys:base.ReadPermissions
                org.alfresco.service.cmr.security.PermissionService.getSettablePermissions=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.hasPermission=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.getReaders=ACL_METHOD.ROLE_ADMINISTRATOR
                org.alfresco.repo.security.permissions.impl.ExtendedPermissionService.getWriters=ACL_METHOD.ROLE_ADMINISTRATOR
                org.alfresco.service.cmr.security.PermissionService.deletePermissions=ACL_NODE.0.sys:base.ChangePermissions
                org.alfresco.service.cmr.security.PermissionService.deletePermission=ACL_NODE.0.sys:base.ChangePermissions
                org.alfresco.service.cmr.security.PermissionService.setPermission=ACL_NODE.0.sys:base.ChangePermissions
                org.alfresco.service.cmr.security.PermissionService.setInheritParentPermissions=ACL_NODE.0.sys:base.ChangePermissions
                org.alfresco.service.cmr.security.PermissionService.getInheritParentPermissions=ACL_ALLOW
                org.alfresco.service.cmr.security.PermissionService.clearPermission=ACL_NODE.0.sys:base.ChangePermissions
                org.alfresco.service.cmr.security.PermissionService.*=ACL_DENY
            </value>
        </property>
    </bean>

   <bean name="writersSharedCache" factory-bean="cacheFactory" factory-method="createCache">
      <constructor-arg value="cache.writersSharedCache"/>
   </bean>

    <bean name="writersCache" class="org.alfresco.repo.cache.TransactionalCache">
      <property name="sharedCache">
         <ref bean="writersSharedCache" />
      </property>
      <property name="name">
         <value>org.alfresco.writersTransactionalCache</value>
      </property>
      <property name="maxCacheSize" value="10000" />
      <property name="mutable" value="true" />
      <property name="disableSharedCache" value="${system.cache.disableMutableSharedCaches}" />
   </bean>

   <bean id="permissionServiceImpl" class="org.alfresco.repo.security.permissions.impl.RMPermissionServiceImpl" init-method="init">
      <property name="writersCache" ref="writersCache"/>
      <property name="nodeService">
         <ref bean="mtAwareNodeService" />
      </property>
      <property name="tenantService">
         <ref bean="tenantService"/>
      </property>
      <property name="dictionaryService">
         <ref bean="dictionaryService" />
      </property>
      <property name="permissionsDaoComponent">
         <ref bean="permissionsDaoComponent" />
      </property>
      <property name="modelDAO">
         <ref bean="permissionsModelDAO" />
      </property>
      <property name="authorityService">
         <ref bean="authorityService" />
      </property>
      <property name="accessCache">
         <ref bean="permissionsAccessCache" />
      </property>
      <property name="readersCache">
         <ref bean="readersCache" />
      </property>
      <property name="readersDeniedCache">
         <ref bean="readersDeniedCache" />
      </property>
      <property name="policyComponent">
         <ref bean="policyComponent" />
      </property>
      <property name="aclDAO">
         <ref bean="aclDAO" />
      </property>
      <property name="ownableService">
         <ref bean="ownableService" />
      </property>
      <property name="anyDenyDenies">
         <value>${security.anyDenyDenies}</value>
      </property>
      <property name="dynamicAuthorities">
         <list>
            <ref bean="ownerDynamicAuthority" />
            <ref bean="lockOwnerDynamicAuthority" />
            <ref bean="extendedWriterDynamicAuthority" />
            <ref bean="extendedReaderDynamicAuthority" />
         </list>
      </property>
      <property name="filePlanService">
         <ref bean="filePlanService" />
      </property>
   </bean>

   <bean id="extendedReaderDynamicAuthority" class="org.alfresco.module.org_alfresco_module_rm.security.ExtendedReaderDynamicAuthority" />

   <bean id="extendedWriterDynamicAuthority" class="org.alfresco.module.org_alfresco_module_rm.security.ExtendedWriterDynamicAuthority" />

   <!-- Action Service -->
   <bean id="actionService" class="org.alfresco.repo.action.ExtendedActionServiceImpl" init-method="init">

   		<property name="filePlanService" ref="FilePlanService" />

        <property name="policyComponent">
            <ref bean="policyComponent" />
        </property>
        <property name="nodeService">
            <ref bean="NodeService" />
        </property>
        <property name="searchService">
            <ref bean="ADMSearchService" />
        </property>
        <property name="authenticationContext">
            <ref bean="authenticationContext" />
        </property>
        <property name="actionTrackingService">
            <ref bean="actionTrackingService" />
        </property>
        <property name="dictionaryService">
            <ref bean="DictionaryService" />
        </property>
        <property name="monitor">
            <ref bean="actionServiceMonitor"/>
        </property>

        <property name="asynchronousActionExecutionQueues">
            <map>
                <!--  This is the default async queue -->
               <entry key="">
                      <ref bean="defaultAsynchronousActionExecutionQueue"/>
               </entry>
               <entry key="deployment">
                      <ref bean="deploymentAsynchronousActionExecutionQueue"/>
               </entry>
            </map>
        </property>
    </bean>

    <bean id="parameterProcessorComponent" class="org.alfresco.repo.action.parameter.ParameterProcessorComponent"/>

    <bean id="baseParamenterProcessor" abstract="true" init-method="init">
    	<property name="parameterProcessorComponent" ref="parameterProcessorComponent"/>
    </bean>

    <bean id="nodeParameterProcessor" parent="baseParamenterProcessor" class="org.alfresco.repo.action.parameter.NodeParameterProcessor" >
       <property name="name" value="node" />
       <property name="nodeService" ref="NodeService" />
       <property name="dictionaryService" ref="DictionaryService" />
       <property name="namespaceService" ref="NamespaceService" />
       <property name="recordsManagementAdminService" ref="recordsManagementAdminService" />
       <property name="maximumNumberSuggestions">
          <value>${rm.autocompletesuggestion.maxsuggestions.node}</value>
       </property>
    </bean>

    <!-- Bootstrap node parameter processor  -->
    <bean id="nodeParameterSuggesterBootstrap" class="org.alfresco.repo.action.parameter.NodeParameterSuggesterBootstrap" >
       <property name="namespaceService" ref="namespaceService"/>
       <property name="nodeParameterProcessor" ref="nodeParameterProcessor"/>
       <property name="nodeParameterProcessorAspects">
          <value>${rm.autocompletesuggestion.nodeParameterSuggester.aspectsAndTypes}</value>
       </property>
    </bean>

    <bean id="dateParameterProcessor" parent="baseParamenterProcessor" class="org.alfresco.repo.action.parameter.DateParameterProcessor">
       <property name="name" value="date" />
       <property name="maximumNumberSuggestions">
          <value>${rm.autocompletesuggestion.maxsuggestions.date}</value>
       </property>
    </bean>

    <bean id="messageParameterProcessor" parent="baseParamenterProcessor" class="org.alfresco.repo.action.parameter.MessageParameterProcessor">
       <property name="name" value="message" />
    </bean>

    <!--  Rule Service -->

    <bean id="ruleService" class="org.alfresco.repo.rule.ExtendedRuleServiceImpl" init-method="init">
        <property name="nodeService" ref="NodeService"/>
        <property name="nodeService2" ref="NodeService"/>
        <property name="runtimeNodeService" ref="nodeService"/>
        <property name="copyService" ref="copyService"/>
        <property name="actionService" ref="ActionService"/>
        <property name="runtimeActionService" ref="actionService"/>
        <property name="dictionaryService" ref="dictionaryService"/>
        <property name="policyComponent" ref="policyComponent"/>
        <property name="permissionService" ref="permissionService"/>
        <property name="nodeRulesCache" ref="nodeRulesCache"/>
        <property name="rulesDisabled">
            <value>false</value>
        </property>
        <!--  Since RM 2.1 -->
        <property name="filePlanService" ref="FilePlanService" />
        <property name="runAsAdmin">
            <value>${rm.rule.runasadmin}</value>
        </property>
        <property name="recordService" ref="RecordService" />
    </bean>

    <bean id="FormService_security" class="org.alfresco.module.org_alfresco_module_rm.security.RMMethodSecurityInterceptor">
        <property name="authenticationManager"><ref bean="authenticationManager"/></property>
        <property name="accessDecisionManager"><ref bean="accessDecisionManager"/></property>
        <property name="afterInvocationManager"><ref bean="afterInvocationManager"/></property>
        <property name="objectDefinitionSource">
        	<value>
        	org.alfresco.repo.forms.FormService.getForm=ACL_ALLOW
        	org.alfresco.repo.forms.FormService.saveForm=ACL_ALLOW
        	org.alfresco.repo.forms.FormService.*=ACL_DENY
        	</value>
        </property>
    </bean>

    <bean id="searchScript" parent="baseJavaScriptExtension" class="org.alfresco.repo.jscript.ExtendedSearch">
        <property name="extensionName">
            <value>search</value>
        </property>
        <property name="searchSubsystemSwitchableApplicationContextFactory">
            <ref bean="Search" />
        </property>
        <property name="serviceRegistry">
            <ref bean="ServiceRegistry"/>
        </property>
        <property name="repositoryHelper">
           <ref bean="repositoryHelper"/>
        </property>
        <property name="storeUrl">
            <value>${spaces.store}</value>
        </property>
    </bean>

    <bean id="on-delete-child-association-trigger" class="org.alfresco.repo.rule.ruletrigger.ExtendedBeforeDeleteChildAssociationRuleTrigger" parent="rule-trigger-base">
      <property name="executeRuleImmediately">
          <value>true</value>
      </property>
   </bean>

</beans>