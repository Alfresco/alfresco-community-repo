# Module messages

module.msg.found_modules=Found {0} module package(s).
module.msg.starting=   Starting module ''{0}'' version {1}.
module.msg.installing=   Installing module ''{0}'' version {1}.
module.msg.upgrading=   Upgrading module ''{0}'' version {1} (was {2}).
module.msg.missing=   A previously-installed module ''{0}'' (version {1}) is not present in your distribution.
module.msg.dependencies=   Module ''{0}'' version {1} has the following dependencies: {1}

module.warn.no_install_version=Module ''{0}'' had no install version.  Assuming version {1} was installed.

module.err.missing_dependency=\nModule ''{0}'' version {1} depends on module ''{2}'', which has not been installed.
module.err.downgrading_not_supported=\nDowngrading of modules is not supported.\nModule ''{0}'' version {1} is currently installed and must be uninstalled before version {2} can be installed.
module.err.unsupported_repo_version=\nModule ''{0}'' version {1} is incompatible with the current repository version {2}.\n   The repository version required must be in range [{3} : {4}]. 
module.err.already_executed=The module component has already been executed: {0}.{1}
module.err.execution_failed=A module component ''{0}'' failed to execute: {1}
module.err.component_already_registered=A component named ''{0}'' has already been registered for module ''{1}''.
module.err.unable_to_open_module_properties=The module properties file ''{0}'' could not be read.
module.err.component_in_missing_module=The component ''{0}'' belongs to a non-existent module ''{1}''.
module.err.orphaned_components={0} module components were not considered for execution.
module.err.deprecated_modules=The following deprecated modules are installed: {0}. Please remove these AMPs in order to continue.