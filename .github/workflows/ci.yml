name: Alfresco Community Repo CI

on:
  pull_request:
  push:
    branches:
      - feature/**
      - fix/**
  workflow_call:

env:
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_ACTIONS_DEPLOY_TIMEOUT: 60
  JAVA_VERSION: "17"
  LOG_WARN: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
  MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  TAS_ENVIRONMENT: ./packaging/tests/environment
  TAS_SCRIPTS: ../alfresco-community-repo/packaging/tests/scripts

jobs:
  prepare:
    name: "Prepare"
    runs-on: ubuntu-latest
    if: >
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Clean cache"
        run: bash ./scripts/ci/cleanup_cache.sh
      - name: "Prepare environment"
        run: bash ./scripts/ci/prepare.sh

  veracode:
    name: "Source Clear Scan (SCA)"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      (github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request') &&
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: Alfresco/alfresco-build-tools/.github/actions/veracode@master
        with:
          srcclr-api-token: ${{ secrets.SRCCLR_API_TOKEN }}

  AllUnitTestsSuite:
    name: "Core, Data-Model, Repository - AllUnitTestsSuite - Build and test"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Run tests"
        run: |
          mvn -B test -pl core,data-model -am -DfailIfNoTests=false
          mvn -B test -pl "repository,mmt" -am "-Dtest=AllUnitTestsSuite,AllMmtUnitTestSuite" -DfailIfNoTests=false

  Remote-api-AppContextTestSuites:
    name: Remote-api - ${{ matrix.testSuite }}
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    strategy:
      fail-fast: false
      matrix:
        include:
          - testSuite: AppContext01TestSuite
            profile: default
          - testSuite: AppContext02TestSuite
            profile: with-transform-core-aio
          - testSuite: AppContext03TestSuite
            profile: with-transform-core-aio
          - testSuite: AppContext04TestSuite
            profile: with-transform-core-aio
          - testSuite: AppContextExtraTestSuite
            profile: default
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set transformers tag"
        run: echo "TRANSFORMERS_TAG=$(mvn help:evaluate -Dexpression=dependency.alfresco-transform-core.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/ci/docker-compose/docker-compose.yaml --profile ${{ matrix.profile }} up -d
      - name: "Run tests"
        run: mvn -B test -pl remote-api -am -Dtest=${{ matrix.testSuite }} -DfailIfNoTests=false -Ddb.driver=org.postgresql.Driver -Ddb.name=alfresco -Ddb.url=jdbc:postgresql://localhost:5433/alfresco -Ddb.username=alfresco -Ddb.password=alfresco

  Repository-MariaDB-tests:
    name: Repository - MariaDB ${{ matrix.version }} tests
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request' ) &&
      ! contains(github.event.head_commit.message, '[skip db]')) ||
      contains(github.event.head_commit.message, '[db]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    strategy:
      fail-fast: false
      matrix:
        version: ['10.2.18', '10.4', '10.5']
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/ci/docker-compose/docker-compose-db.yaml --profile mariadb up -d
        env:
          MARIADB_VERSION: ${{ matrix.version }}
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=AllDBTestsTestSuite -DfailIfNoTests=false -Ddb.name=alfresco -Ddb.url=jdbc:mariadb://localhost:3307/alfresco?useUnicode=yes\&characterEncoding=UTF-8 -Ddb.username=alfresco -Ddb.password=alfresco -Ddb.driver=org.mariadb.jdbc.Driver

  Repository-MariaDB10-6-tests:
    name: "Repository - MariaDB 10.6 tests"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]')) &&
      ! contains(github.event.head_commit.message, '[skip db]')) ||
      contains(github.event.head_commit.message, '[latest db]') ||
      contains(github.event.head_commit.message, '[db]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/ci/docker-compose/docker-compose-db.yaml --profile mariadb up -d
        env:
          MARIADB_VERSION: 10.6
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=AllDBTestsTestSuite -DfailIfNoTests=false -Ddb.name=alfresco -Ddb.url=jdbc:mariadb://localhost:3307/alfresco?useUnicode=yes\&characterEncoding=UTF-8 -Ddb.username=alfresco -Ddb.password=alfresco -Ddb.driver=org.mariadb.jdbc.Driver

  Repository-MySQL-tests:
    name: Repository - MySQL 8 tests
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]')) &&
      ! contains(github.event.head_commit.message, '[skip db]')) ||
      contains(github.event.head_commit.message, '[latest db]') ||
      contains(github.event.head_commit.message, '[db]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/ci/docker-compose/docker-compose-db.yaml --profile mysql up -d
        env:
          MYSQL_VERSION: 8
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=AllDBTestsTestSuite -DfailIfNoTests=false -Ddb.driver=com.mysql.jdbc.Driver -Ddb.name=alfresco -Ddb.url=jdbc:mysql://localhost:3307/alfresco -Ddb.username=alfresco -Ddb.password=alfresco

  Repository-PostgreSQL13-7-tests:
    name: "Repository - PostgreSQL 13.7 tests"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request' ) &&
      ! contains(github.event.head_commit.message, '[skip db]')) ||
      contains(github.event.head_commit.message, '[db]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/ci/docker-compose/docker-compose-db.yaml --profile postgres up -d
        env:
          POSTGRES_VERSION: 10.6
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=AllDBTestsTestSuite -DfailIfNoTests=false -Ddb.driver=org.postgresql.Driver -Ddb.name=alfresco -Ddb.url=jdbc:postgresql://localhost:5433/alfresco -Ddb.username=alfresco -Ddb.password=alfresco

  Repository-PostgreSQL14-4-tests:
    name: "Repository - PostgreSQL 14.4 tests"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]')) &&
      ! contains(github.event.head_commit.message, '[skip db]')) ||
      contains(github.event.head_commit.message, '[latest db]') ||
      contains(github.event.head_commit.message, '[db]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/ci/docker-compose/docker-compose-db.yaml --profile postgres up -d
        env:
          POSTGRES_VERSION: 14.4
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=AllDBTestsTestSuite -DfailIfNoTests=false -Ddb.driver=org.postgresql.Driver -Ddb.name=alfresco -Ddb.url=jdbc:postgresql://localhost:5433/alfresco -Ddb.username=alfresco -Ddb.password=alfresco

  Repository-Messaging-tests:
    name: Repository - Messaging tests
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/ci/docker-compose/docker-compose.yaml --profile activemq up -d
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=CamelRoutesTest,CamelComponentsTest -DfailIfNoTests=false

  Repository-AppContextTestSuites:
    name: Repository - ${{ matrix.testSuite }}
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    strategy:
      fail-fast: false
      matrix:
        include:
          - testSuite: AppContext01TestSuite
            profile: with-transform-core-aio
          - testSuite: AppContext02TestSuite
            profile: default
          - testSuite: AppContext03TestSuite
            profile: with-transform-core-aio
          - testSuite: AppContext04TestSuite
            profile: with-transform-core-aio
          - testSuite: AppContext05TestSuite
            profile: default
            parameters: '"-Didentity-service.auth-server-url=http://${HOST_IP}:8999/auth"'
          - testSuite: AppContext06TestSuite
            profile: with-transform-core-aio
          - testSuite: AppContextExtraTestSuite
            profile: with-transform-core-aio
          - testSuite: MiscContextTestSuite
            profile: with-transform-core-aio
          - testSuite: SearchTestSuite
            profile: default
            parameters: '-Dindex.subsystem.name=solr6'
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up IDS"
        run: |
          if [ ${{ matrix.testSuite }} == 'AppContext05TestSuite' ];
          then
            mkdir -p "${HOME}/tmp"
            cp repository/src/test/resources/realms/alfresco-realm.json "${HOME}/tmp"
            echo "HOST_IP=$(hostname  -I | cut -f1 -d' ')" >> $GITHUB_ENV
            docker run -d -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -e DB_VENDOR=h2 -p 8999:8080 -e KEYCLOAK_IMPORT=/tmp/alfresco-realm.json -v $HOME/tmp/alfresco-realm.json:/tmp/alfresco-realm.json alfresco/alfresco-identity-service:1.2
          fi
      - name: "Set transformers tag"
        run: echo "TRANSFORMERS_TAG=$(mvn help:evaluate -Dexpression=dependency.alfresco-transform-core.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/ci/docker-compose/docker-compose.yaml --profile ${{ matrix.profile }} up -d
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=${{ matrix.testSuite }} -DfailIfNoTests=false -Ddb.driver=org.postgresql.Driver -Ddb.name=alfresco -Ddb.url=jdbc:postgresql://localhost:5433/alfresco -Ddb.username=alfresco -Ddb.password=alfresco ${{ matrix.parameters }}

  TAS-Tests:
    name: ${{ matrix.test-name }}
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request' ) &&
      ! contains(github.event.head_commit.message, '[skip tas]')) ||
      contains(github.event.head_commit.message, '[tas]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    strategy:
      fail-fast: false
      matrix:
        include:
          - test-name: "REST API TAS tests part1"
            test-dir: rtas-restapi
            test-profile: run-restapi-part1
          - test-name: "REST API TAS tests part2"
            test-dir: tas-restapi
            test-profile: run-restapi-part2
          - test-name: "REST API TAS tests part3"
            test-dir: tas-restapi
            test-profile: run-restapi-part3
          - test-name: "CMIS TAS tests - BROWSER binding"
            test-dir: tas-cmis
            test-profile: run-cmis-browser
          - test-name: "CMIS TAS tests - ATOM binding"
            test-dir: tas-cmis
            test-profile: run-cmis-atom
          - test-name: "CMIS TAS tests - WEBSERVICES binding"
            test-dir: tas-cmis
            test-profile: run-cmis-webservices
          - test-name: "Email TAS tests"
            test-dir: tas-email
          - test-name: "WebDAV TAS tests"
            test-dir: tas-webdav
          - test-name: "Integration TAS tests"
            test-dir: tas-integration
    env:
      REQUIRES_LOCAL_IMAGES: true
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/ci/init.sh
          bash ./scripts/ci/build.sh
      - name: "Set up the environment"
        run: |
          ${{ env.TAS_SCRIPTS }}/start-compose.sh ${{ env.TAS_ENVIRONMENT }}/docker-compose-minimal+transforms.yml
          ${{ env.TAS_SCRIPTS }}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      - name: "Set up the environment for integration tests"
        run: |
          if [ ${{ matrix.test-name }} == 'Integration TAS tests' ];
          then
            mvn install -pl :alfresco-community-repo-integration-test -am -DskipTests -Pall-tas-tests
          fi
      - name: "Run tests"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn -B verify -f packaging/tests/${{ matrix.test-dir }}/pom.xml -Pall-tas-tests,${{ matrix.test-profile }} -Denvironment=default -DrunBugs=false

  Share-Services-ShareServicesTestSuite:
    name: Share Services - ShareServicesTestSuite
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/ci/docker-compose/docker-compose.yaml --profile postgres up -d
      - name: "Run tests"
        run: mvn -B test -pl :alfresco-share-services -am -Dtest=ShareServicesTestSuite -DfailIfNoTests=false -Ddb.driver=org.postgresql.Driver -Ddb.name=alfresco -Ddb.url=jdbc:postgresql://localhost:5433/alfresco -Ddb.username=alfresco -Ddb.password=alfresco

  AGS-Tests-PostgresSQL:
    name: AGS Unit & Integration Tests 0${{ matrix.part }} (PostgreSQL) ${{ matrix.test-name }}
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request' ) &&
      ! contains(github.event.head_commit.message, '[skip ags]')) ||
      contains(github.event.head_commit.message, '[ags]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    strategy:
      fail-fast: false
      matrix:
        part: [1, 2, 3, 4]
    env:
      REQUIRES_INSTALLED_ARTIFACTS: true
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/ci/init.sh
          bash ./scripts/ci/build.sh
      - name: "Verify"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn --file amps/ags/pom.xml -B verify -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -Pags -Pstart-postgres -PagsAllTestSuitePt${{ matrix.part }} ${{ env.LOG_WARN }}

  AGS-Tests-MySQL:
    name: AGS Unit & Integration Tests 0${{ matrix.part }} (PostgreSQL) ${{ matrix.test-name }}
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request' ) &&
      ! contains(github.event.head_commit.message, '[skip ags]')) ||
      contains(github.event.head_commit.message, '[ags on MySQL]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    strategy:
      fail-fast: false
      matrix:
        part: [1, 2, 3, 4]
    env:
      REQUIRES_INSTALLED_ARTIFACTS: true
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/ci/init.sh
          bash ./scripts/ci/build.sh
      - name: "Verify"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn --file amps/ags/pom.xml -B verify -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -Pags -Pstart-mysql -PagsAllTestSuitePt${{ matrix.part }} ${{ env.LOG_WARN }}

  AGS-Community-Rest-API-Tests:
    name: "AGS Community Rest API Tests"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request' ) &&
      ! contains(github.event.head_commit.message, '[skip ags]')) ||
      contains(github.event.head_commit.message, '[ags]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Docker Hub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: bash ./scripts/ci/build.sh
        env:
          REQUIRES_LOCAL_IMAGES: true
      - name: "Set up the environment"
        run: |
          ${{ env.TAS_SCRIPTS }}/start-compose.sh ./amps/ags/rm-community/rm-community-repo/docker-compose.yml
          ${{ env.TAS_SCRIPTS }}/wait-for-alfresco-start.sh "http://localhost:8080/alfresco"
      - name: "Test"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn -B test -pl :alfresco-governance-services-automation-community-rest-api -am -DfailIfNoTests=false -Dskip.automationtests=false -Pags
      - run: bash amps/ags/ci/scripts/getLogs.sh
        if: ${{ always() }}
      - shell: bash
        if: ${{ always() }}
        run: |
          mkdir -p deploy_dir/community/${{ github.run_number }}/AGS-Community-Rest-API-Tests
          mv "alfresco.log" "deploy_dir/community/${{ github.run_number }}/AGS-Community-Rest-API-Tests"
          mv "solr.log" "deploy_dir/community/${{ github.run_number }}/AGS-Community-Rest-API-Tests"
          mv "./amps/ags/rm-automation/rm-automation-community-rest-api/target/reports" "deploy_dir/community/${{ github.run_number }}/AGS-Community-Rest-API-Tests"
      - name: "Configure AWS credentials"
        if: ${{ always() }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AGS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AGS_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: "Upload artifacts to Amazon S3 bucket"
        if: ${{ always() }}
        run: aws s3 cp --recursive ./deploy_dir s3://ags-travis-artifacts