<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:task="http://www.springframework.org/schema/task"
   xmlns:camel="http://camel.apache.org/schema/spring"
   xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="org.alfresco.messaging.camel.configuration"/>

    <bean id="messagingObjectMapper" class="org.gytheio.messaging.jackson.ObjectMapperFactory"
        factory-method="createInstance" />
        
    <bean id="defaultDataFormat" class="org.apache.camel.component.jackson.JacksonDataFormat">
        <constructor-arg ref="messagingObjectMapper" />
        <constructor-arg value="java.lang.Object" />
    </bean>

    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
        init-method="start" destroy-method="stop">
        <property name="maxConnections" value="${messaging.broker.connections.max}" />
        <property name="createConnectionOnStartup" value="false"/>
        <property name="connectionFactory" ref="activeMqConnectionFactory" />
    </bean>
    
    <bean id="messagingTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="pooledConnectionFactory"/>
    </bean>

    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="pooledConnectionFactory" />
        <property name="transacted" value="${messaging.transacted}" />
        <property name="transactionManager" ref="messagingTransactionManager" />
    </bean>

    <bean id="jms" class="org.apache.camel.component.jms.JmsComponent">
        <property name="configuration" ref="jmsConfig"/>
    </bean>

    <bean id="activemq" class="org.apache.camel.component.activemq.ActiveMQComponent">
        <property name="configuration" ref="jmsConfig"/>
    </bean>

    <bean id="amqp" class="org.apache.camel.component.amqp.AMQPComponent">
        <property name="configuration" ref="jmsConfig"/>
    </bean>

    <bean id="CAMEL_PROPAGATION_MANDATORY" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="messagingTransactionManager" />
        <property name="propagationBehaviorName" value="PROPAGATION_MANDATORY" />
    </bean>
    
    <bean id="CAMEL_PROPAGATION_NEVER" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="messagingTransactionManager" />
        <property name="propagationBehaviorName" value="PROPAGATION_NEVER" />
    </bean>
    
    <bean id="CAMEL_PROPAGATION_NOT_SUPPORTED" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="messagingTransactionManager" />
        <property name="propagationBehaviorName" value="PROPAGATION_NOT_SUPPORTED" />
    </bean>
    
    <bean id="CAMEL_PROPAGATION_REQUIRED" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="messagingTransactionManager" />
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" />
    </bean>
    
    <bean id="CAMEL_PROPAGATION_REQUIRES_NEW" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="messagingTransactionManager" />
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRES_NEW" />
    </bean>
    
    <bean id="CAMEL_PROPAGATION_SUPPORTS" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="messagingTransactionManager" />
        <property name="propagationBehaviorName" value="PROPAGATION_SUPPORTS" />
    </bean>
    
    <!-- Any RouteBuilder in this package will be fired up -->
    <context:component-scan base-package="org.alfresco.messaging.camel.routes"/>

    <!-- Any RouteBuilder in this enterprise package will be fired up -->
    <context:component-scan base-package="org.alfresco.enterprise.repo.routes"/>

    <camelContext id="alfrescoCamelContext" xmlns="http://camel.apache.org/schema/spring" useBreadcrumb="true">
        <contextScan/>
        <jmxAgent id="agent" />
        <template id="camelProducerTemplate" defaultEndpoint="direct:alfresco.default" />
    </camelContext>

    <import resource="defaultRoutes.xml" />
    <bean id="defaultRouteLoader" class="org.alfresco.messaging.camel.SpringContextRouteLoader">
        <property name="camelContextId" value="alfrescoCamelContext" />
        <property name="routeContextId" value="deadLetterRoutes" />
    </bean>
    
    <!-- In the default routes, this is where a message goes if no queue is specified -->
    <bean id="deadLetterQueue" class="org.gytheio.messaging.LoggingDeadLetterQueue" />
    
</beans>
