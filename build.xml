<?xml version="1.0"?>
<project name="rm-parent" basedir=".">

   <!-- The properties 'app.war.artifactId' and 'app.tomcat' are defined in the modules -->

   <property file="build.local.properties" />
   <property file="build.properties" />

   <property environment="env" />

   <target name="fetchWarFile">
      <xmlproperty file="../pom.xml" keepRoot="false"/>
      <exec executable="${mvn.exec}" failonerror="true">
         <arg value="dependency:get" />
         <arg value="-DgroupId=${groupId}" />
         <arg value="-DartifactId=${app.war.artifactId}" />
         <arg value="-Dversion=${properties.alfresco.base.version}" />
         <arg value="-Dpackaging=${app.war.packaging}" />
         <arg value="-Ddest=${ant.build.directory}/${app.package}" />
      </exec>
   </target>

   <target name="fetchEntpriseWarFile">
      <xmlproperty file="../pom.xml" keepRoot="false"/>
      <exec executable="${mvn.exec}" failonerror="true">
         <arg value="dependency:get" />
         <arg value="-DgroupId=${groupId}" />
         <arg value="-DartifactId=${app.war.artifactId}-enterprise" />
         <arg value="-Dversion=${properties.alfresco.base.version}" />
         <arg value="-Dpackaging=${app.war.packaging}" />
         <arg value="-Ddest=${ant.build.directory}/${app.war.artifactId}.${app.war.packaging}" />
      </exec>
   </target>

   <target name="deleteWarFile">
      <delete file="${app.package.path}" failonerror="true" />
   </target>

   <target name="deleteExplodedWar">
      <delete dir="${app.folder}" failonerror="true" />
   </target>

   <target name="alfresco:amp" depends="unitTest">
      <exec executable="${mvn.exec}" failonerror="true">
         <arg value="clean" />
         <arg value="install" />
         <arg value="-DskipTests" />
         <arg value="-Dminifyjs=${minifyjs}" />
         <arg value="-PfullBuild" />
         <arg value="alfresco:amp" />
      </exec>
   </target>

   <target name="alfresco:install" depends="deleteWarFile, deleteExplodedWar, alfresco:amp, fetchWarFile">
      <exec executable="${mvn.exec}" failonerror="true">
         <arg value="alfresco:install" />
      </exec>
   </target>

   <target name="alfresco:installEnterprise" depends="deleteWarFile, deleteExplodedWar, alfresco:amp, fetchEntpriseWarFile">
      <exec executable="${mvn.exec}" failonerror="true">
         <arg value="alfresco:install" />
         <arg value="-Penterprise" />
      </exec>
   </target>

   <target name="copyWarFileToTomcat">
      <copy file="${ant.build.directory}/${app.package}" todir="${app.tomcat.webapps}" failonerror="true" />
   </target>

   <target name="fullBuildCommunity" depends="alfresco:install, copyWarFileToTomcat" description=""/>

   <target name="fullBuildEnterprise" depends="alfresco:installEnterprise, copyWarFileToTomcat" description=""/>

   <target name="copyWebDirectory" if="${web.directory.exists}">
      <copy todir="${app.folder}" failonerror="true">
         <fileset dir="${ant.source.web.directory}" />
      </copy>
   </target>

   <target name="package">
      <fail message="Exploded webapp directory '${app.war.artifactId}' does not exist.">
         <condition>
            <not>
               <available file="${app.folder}" type="dir"/>
            </not>
         </condition>
      </fail>
      <exec executable="${mvn.exec}" failonerror="true">
         <arg value="package" />
         <arg value="-DskipTests" />
      </exec>
   </target>

   <target name="incrementalBuild" depends="package, unitTest" description="">
      <xmlproperty file="pom.xml" keepRoot="false"/>
      <copy file="${ant.build.directory}/${artifactId}.jar" tofile="${ant.build.directory}/${artifactId}-amp.jar" failonerror="true" />
      <move file="${ant.build.directory}/${artifactId}-amp.jar" todir="${app.folder}/WEB-INF/lib" failonerror="true" />
      <copy todir="${app.folder}/WEB-INF/classes" failonerror="true">
         <fileset dir="${ant.config.directory}">
            <exclude name="**/module.properties" />
            <exclude name="**/file-mapping.properties" />
         </fileset>
      </copy>
      <condition property="web.directory.exists">
         <available file="${ant.source.web.directory}" type="dir" />
      </condition>
      <antcall target="copyWebDirectory"></antcall>
   </target>

   <target name="unitTest" />
</project>
