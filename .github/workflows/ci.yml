name: Alfresco Community Repo CI

on:
  pull_request:
  push:
    branches:
      - feature/**
      - fix/**
  workflow_call:

env:
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_ACTIONS_DEPLOY_TIMEOUT: 60
  JAVA_VERSION: "17"
  LOG_WARN: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
  MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  TAS_ENVIRONMENT: ./packaging/tests/environment
  TAS_SCRIPTS: ../alfresco-community-repo/packaging/tests/scripts

jobs:
  prepare:
    name: "Prepare"
    runs-on: ubuntu-latest
    if: >
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Clean cache"
        run: bash ./scripts/travis/cleanup_cache.sh
      - name: "Prepare environment"
        run: bash ./scripts/travis/prepare.sh

  veracode:
    name: "Source Clear Scan (SCA)"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      (github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request') &&
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: Alfresco/alfresco-build-tools/.github/actions/veracode@master
        with:
          srcclr-api-token: ${{ secrets.SRCCLR_API_TOKEN }}

  AllUnitTestsSuite:
    name: "Core, Data-Model, Repository - AllUnitTestsSuite - Build and test"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Run tests"
        run: |
          mvn -B test -pl core,data-model -am -DfailIfNoTests=false
          mvn -B test -pl "repository,mmt" -am "-Dtest=AllUnitTestsSuite,AllMmtUnitTestSuite" -DfailIfNoTests=false

  Repository-AppContext01TestSuite:
    name: "Repository - AppContext01TestSuite"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set Transformers tag"
        run: |
          echo "TRANSFORMERS_TAG=$(mvn help:evaluate -Dexpression=dependency.alfresco-transform-core.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/gh-actions/docker-compose/docker-compose.yaml --profile with-transform-core-aio up -d
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=AppContext01TestSuite -DfailIfNoTests=false -Ddb.driver=org.postgresql.Driver -Ddb.name=alfresco -Ddb.url=jdbc:postgresql://localhost:5433/alfresco -Ddb.username=alfresco -Ddb.password=alfresco

  Repository-AppContext05TestSuite:
    name: "Repository - AppContext05TestSuite"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/gh-actions/docker-compose/docker-compose.yaml up -d
      - name: "Set HOST_IP"
        run: |
          mkdir -p "${HOME}/tmp"
          cp repository/src/test/resources/realms/alfresco-realm.json "${HOME}/tmp"
          echo "HOST_IP=$(hostname  -I | cut -f1 -d' ')" >> $GITHUB_ENV
      - name: "Run IDS"
        run: docker run -d -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -e DB_VENDOR=h2 -p 8999:8080 -e KEYCLOAK_IMPORT=/tmp/alfresco-realm.json -v $HOME/tmp/alfresco-realm.json:/tmp/alfresco-realm.json alfresco/alfresco-identity-service:1.2
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=AppContext05TestSuite -DfailIfNoTests=false -Ddb.driver=org.postgresql.Driver -Ddb.name=alfresco -Ddb.url=jdbc:postgresql://localhost:5433/alfresco -Ddb.username=alfresco -Ddb.password=alfresco "-Didentity-service.auth-server-url=http://${{ env.HOST_IP }}:8999/auth"

  Repository-SearchTestSuite:
    name: "Repository - SearchTestSuite"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/gh-actions/docker-compose/docker-compose.yaml up -d
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=SearchTestSuite -DfailIfNoTests=false -Ddb.driver=org.postgresql.Driver -Ddb.name=alfresco -Ddb.url=jdbc:postgresql://localhost:5433/alfresco -Ddb.username=alfresco -Ddb.password=alfresco -Dindex.subsystem.name=solr6

  Repository-MariaDB10-2-18-tests:
    name: "Repository - MariaDB 10.2.18 tests"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]')) &&
      ! contains(github.event.head_commit.message, '[skip db]')) ||
      contains(github.event.head_commit.message, '[db]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/gh-actions/docker-compose/docker-compose-db.yaml --profile mariadb up -d
        env:
          MARIADB_VERSION: 10.2.18
      - name: "Run tests"
        run: mvn -B test -pl repository -am -Dtest=AllDBTestsTestSuite -DfailIfNoTests=false -Ddb.name=alfresco -Ddb.url=jdbc:mariadb://localhost:3307/alfresco?useUnicode=yes\&characterEncoding=UTF-8 -Ddb.username=alfresco -Ddb.password=alfresco -Ddb.driver=org.mariadb.jdbc.Driver

  Remote-api-AppContext01TestSuite:
    name: "Remote-api - AppContext01TestSuite"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    env:
      REQUIRES_INSTALLED_ARTIFACTS: true
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/travis/init.sh
          bash ./scripts/travis/build.sh
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/gh-actions/docker-compose/docker-compose.yaml up -d
      - name: "Run tests"
        run: mvn -B test -pl remote-api -Dtest=AppContext01TestSuite -Ddb.driver=org.postgresql.Driver -Ddb.name=alfresco -Ddb.url=jdbc:postgresql://localhost:5433/alfresco -Ddb.username=alfresco -Ddb.password=alfresco

  Remote-api-AppContext02TestSuite:
    name: "Remote-api - AppContext02TestSuite"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ! contains(github.event.head_commit.message, '[skip repo]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    env:
      REQUIRES_INSTALLED_ARTIFACTS: true
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          echo "TRANSFORMERS_TAG=$(mvn help:evaluate -Dexpression=dependency.alfresco-transform-core.version -q -DforceStdout)" >> $GITHUB_ENV
          bash ./scripts/travis/init.sh
          bash ./scripts/travis/build.sh
      - name: "Set up the environment"
        run: docker-compose -f ./scripts/gh-actions/docker-compose/docker-compose.yaml --profile with-transform-core-aio up -d
      - name: "Run tests"
        run: mvn -B test -pl remote-api -Dtest=AppContext02TestSuite -Ddb.driver=org.postgresql.Driver -Ddb.name=alfresco -Ddb.url=jdbc:postgresql://localhost:5433/alfresco -Ddb.username=alfresco -Ddb.password=alfresco

  REST-API-TAS-tests-part1:
    name: "REST API TAS tests part1"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request' ) &&
      ! contains(github.event.head_commit.message, '[skip tas]')) ||
      contains(github.event.head_commit.message, '[tas]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    env:
      REQUIRES_LOCAL_IMAGES: true
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/travis/init.sh
          bash ./scripts/travis/build.sh
      - name: "Set up the environment"
        run: |
          ${{ env.TAS_SCRIPTS }}/start-compose.sh ${{ env.TAS_ENVIRONMENT }}/docker-compose-minimal+transforms.yml
          ${{ env.TAS_SCRIPTS }}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      - name: "Run tests"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn -B verify -Pall-tas-tests,run-restapi-part1 -Denvironment=default -DrunBugs=false

  AGS-Unit-And_Integration-Tests-01-PostgreSQL:
    name: "AGS Unit & Integration Tests 01 (PostgreSQL)"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request' ) &&
      ! contains(github.event.head_commit.message, '[skip ags]')) ||
      contains(github.event.head_commit.message, '[ags]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    env:
      REQUIRES_INSTALLED_ARTIFACTS: true
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/travis/init.sh
          bash ./scripts/travis/build.sh
      - name: "Verify"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn --file amps/ags/pom.xml -B verify -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -Pags -Pstart-postgres -PagsAllTestSuitePt1 ${{ env.LOG_WARN }}

  AGS-Community-Rest-API-Tests:
    name: "AGS Community Rest API Tests"
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: >
      ((github.ref_name == 'master' || contains(github.ref_name, '[release]') || github.event_name == 'pull_request' ) &&
      ! contains(github.event.head_commit.message, '[skip ags]')) ||
      contains(github.event.head_commit.message, '[ags]') &&
      ! contains(github.event.head_commit.message, '[skip tests]') &&
      ! contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: "Login to Docker Hub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
      - name: "build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: bash ./scripts/travis/build.sh
        env:
          REQUIRES_LOCAL_IMAGES: true
      - name: "Set up the environment"
        run: |
          ${{ env.TAS_SCRIPTS }}/start-compose.sh ./amps/ags/rm-community/rm-community-repo/docker-compose.yml
          ${{ env.TAS_SCRIPTS }}/wait-for-alfresco-start.sh "http://localhost:8080/alfresco"
      - name: "test"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn -B test -pl :alfresco-governance-services-automation-community-rest-api -am -DfailIfNoTests=false -Dskip.automationtests=false -Pags
      - run: bash amps/ags/travis/scripts/getLogs.sh
        if: ${{ always() }}
      - shell: bash
        if: ${{ always() }}
        run: |
          mkdir -p deploy_dir/community/${{ github.run_number }}/AGS-Community-Rest-API-Tests
          mv "alfresco.log" "deploy_dir/community/${{ github.run_number }}/AGS-Community-Rest-API-Tests"
          mv "solr.log" "deploy_dir/community/${{ github.run_number }}/AGS-Community-Rest-API-Tests"
          mv "./amps/ags/rm-automation/rm-automation-community-rest-api/target/reports" "deploy_dir/community/${{ github.run_number }}/AGS-Community-Rest-API-Tests"
      - name: "Configure AWS credentials"
        if: ${{ always() }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AGS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AGS_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: "Upload artifacts to Amazon S3 bucket"
        if: ${{ always() }}
        run: aws s3 cp --recursive ./deploy_dir s3://ags-travis-artifacts